{"version":3,"sources":["serviceWorker.js","components/router/routeConstants.js","assets/js/helper.js","config/rest_endpoints.js","actions/index.js","config/static_lists.js","components/router/protectedRoute.js","components/authentication/login.js","components/authentication/logout.js","components/common/header.js","components/common/page_header.js","components/common/side_menu_mapper.js","components/common/side_menu.js","components/common/footer.js","components/common/application_container.js","components/settings/change_password.js","components/helper.js","components/dashboard/dashboard_admin.js","components/dashboard/dashboard_employee.js","components/dashboard/dashboard.js","App.js","components/order/orderProduct.js","components/order/newOrder.js","components/order/allOrder.js","components/employees/add_employee.js","components/order/order.js","components/settings/settings.js","components/expense/viewExpenses.js","components/expense/addExpenses.js","components/expense/expenses.js","components/router/AllRoutes.js","reducers/index.js","reducers/reducer_active_user.js","fontawesome.js","index.js"],"names":["Boolean","window","location","hostname","match","LOAD_LOGIN","LOAD_LOGOUT","GetPath","path","len","split","length","isValidJSON","text","JSON","parse","e","byteCode","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","i","_utf8_encode","charCodeAt","isNaN","this","charAt","decode","replace","indexOf","String","fromCharCode","_utf8_decode","string","utftext","n","c","c3","c2","SERVER_PATH","ROOT_URL","PRODUCT_TYPES","PRODUCTS_WITH_TYPE_ID","NEW_ORDER","ALL_ORDERS","ADD_ORDER_PAYMENT","UPDATE_DELIVERY_DATE","ADD_NEW_EMPLOYEE","GET_ALL_EMPLOYEES","GET_ALL_VEHICLE_NUMBERS","GET_EXPENSES","GET_ORDER_DETAIL","GENERATE_RECEIPT","CANCEL_ORDER","EMPLOYEE_TOTALS","GENERATE_CASH_REPORT","USER_BASE_URL","CHANGE_PASSWORD","SET_VAT","GET_VAT","SET_STARTING_ORDER_NUMBER","GET_STARTING_ORDER_NUMBER","ADD_EXPENSE","AUTH_BASE_URL","USER_AUTHENITCATION","axios","interceptors","request","use","sessionStorage","getItem","user","jwt_token","response","data","monthListWithAllMonthOption","id","name","pages","value","label","colors","a","b","d","f","g","h","j","k","l","m","o","p","q","r","s","t","u","v","w","x","y","z","localPermissions","expenseTypes","byType","cashDisposalTypes","ProtectedRoute","props","state","validToken","isAuthorizedRoute","bind","CheckForToken","isUserLoggedIn","_","isEmpty","activeUser","fetchUser","user_permission","idx","Component","component","__html","removeItem","render","to","isLoginPath","connect","defaults","timeout","withCredentials","dispatch","method","url","empID","then","res","status","success","type","payload","console","log","catch","error","c_error","undefined","Login","username","password","startAnimationSpinner","startAnimationError","modalIsOpen","recoveryEmail","isRecoveringPassword","recoveryEmailError","trim","setState","loginDetails","login","target","checkForRecoveryEmail","newProps","refs","errorAnimation","addEventListener","animationEndError","checkForLoggedUser","setItem","stringify","history","push","key","onLogin","errorAnimationClass","className","modal","visible","onClickBackdrop","closeModal","dialogClassName","placeholder","onChange","handleChange","disabled","onClick","onRecoverEmail","style","background","backgroundSize","src","ref","onKeyPress","_handleKeyPress","onUsernameChange","onPasswordChange","headers","Logout","return_div","withRouter","$","Header","notifications","loadingNotifications","quote","on","preventDefault","toggleClass","removeClass","hasClass","$sidebar","parents","addClass","clearInterval","picture","Object","keys","initials","first_name","toLowerCase","backgroundColor","process","pathHeaderBackground","navbar_theme","backgroundPosition","backgroundRepeatX","backgroundImage","href","alt","data-toggle","data-target","changePassword","icon","logout","PageHeader","header","naver","fa_icon","SideMenu","nav_items","render_key","checkCurrentURL","__build_render_dictionary","__render","__render_single","__render_group","__render_dictionary","__render_mobile_navigator","each","find","has","children","not","$target","$navSidebarMini","parent","slideUp","slideDown","siblings","document","off","stopPropagation","tab","serverPermissions","finalPermission","map","permission","serverPermission","_path","pathname","activation","final_renderer","permissions","getPermissions","elem","getDetails","temp","child_name","child_details","object","_key","whoIsOpen","whoIsActive","isGroup","active","slice","ItemText","itemIcon","width","isActive","dictionary","Name","openClass","activeClass","textCapitalize","FI","_keys","aria-hidden","data-submenu-title","counter","final_dictionary","role","title","data-nav-type","Footer","Container","loader","showLoader","faIcon","defaultProps","ChangePassword","useState","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","responseModalOpen","setResponseModalOpen","responseMessage","setResponseMessage","handleKeyPress","onUpdatePassword","showResponseModal","old_password","new_password","Accept","Authorization","message","toggleResponseModal","responseModalHtml","Modal","isOpen","toggle","ModalHeader","ModalBody","event","Button","convertDate","inputFormat","pad","Date","getDate","getMonth","getFullYear","join","range","start","end","Array","fill","getFullName","employee","last_name","useEffect","isAdmin","setGettingData","setEmployeeList","allEmployeeObj","rows","currentDate","jobOrderList","setJobOrderList","employeeList","gettingData","dropDownEmployeeOpen","setDropDownEmployeeOpen","dropDownMonthOpen","setDropDownMonthOpen","dropDownYearOpen","setDropDownYearOpen","selectedEmployee","setSelectedEmployee","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","reportType","setReportType","reportDate","setReportDate","getFilteredData","filterData","getAllJobOrder","employee_id","month","year","yearList","_data","row","currentJobOrder","employee_name","formatter","Intl","NumberFormat","format","total_billed_amount","total_received_amount","total_due_amount","getPrintReport","convertedDate","responseType","date","file","Blob","saveAs","UncontrolledTooltip","placement","dateFormat","selected","todayButton","Dropdown","prevState","DropdownToggle","caret","DropdownMenu","overflow","maxHeight","DropdownItem","selectEmployee","selectMonth","selectYear","headerFields","align","sort","showSno","enableFilter","color","size","loading","Dashboard","App","OrderProduct","orderProducts","product","index","product_type_name","product_name","quantity","unit_price","OrderProductHeader","NewOrder","defaultProduct","defaultProductType","advancePayment","setAdvancePayment","discount","setDiscount","customerName","setCustomerName","customerNumber","setCustomerNumber","addDays","deliveryDate","setDeliveryDate","dropdownProductOpen","setDropdownProductOpen","dropdownProductTypeOpen","setDropdownProductTypeOpen","dropdownCashDisposal","setDropdownCashDisposal","dropDownEmployee","setDropDownEmployee","orderDate","setOrderDate","setOrderProducts","productDisabled","setProductDisabled","productList","setProductList","productTypeList","setProductTypeList","setQuantity","selectedProduct","setSelectedProduct","selectedProductType","setSelectedProductType","selectedCashDisposal","setSelectedCashDisposal","unitPrice","setUnitPrice","openModal","setOpenModal","orderSuccess","setOrderSuccess","customerTRN","setCustomerTRN","employeeSelected","setEmployeeSelected","vat","setVAT","remarks","setRemarks","productDescription","setProductDescription","chequeNumber","setChequeNumber","toggleModal","yourConfig","get","getProductTypes","selectProductType","getProducts","orderProductsHTML","balanceAmount","reduce","accumulator","currentValue","tax","modalHtml","placeOrder","newOrderData","customer_phone_number","customer_name","placement_date","delivery_date","advance_payment","products","customer_trn","cash_disposal","cheque","phone","minDate","maxlength","min","suffix","precision","onChangeEvent","maskedValue","newProduct","product_name_id","parseInt","description","unshift","addProduct","Card","height","marginBottom","onDiscountChange","onAdvancePaymentChange","marginTop","marginLeft","marginRight","block","AllOrders","orderList","setOrderList","dateUpdated","setDateUpdated","orderId","setOrderId","receivedPaymentAmount","setReceivedPaymentAmount","paymentModalOpen","setPaymentModalOpen","getAllOrder","togglePaymentModal","currentOrder","actions","order_status","callBack","order","openEditOrderModal","openReceivePaymentModal","billed_amount","employeeAvatar","topText","bottomText","customerAvatar","moment","due_amount","class","editOrderModalHtml","ModalFooter","order_id","newDate","receivePaymentModal","paid_amount","disposal","receivePayment","right","AddEmployee","openModalFN","setOpenModalFN","openModalUN","setOpenModalUN","openModalResponse","setOpenModalResponse","firstName","setFirstName","lastName","setlastName","userName","setUserName","setPassword","passwordValid","setPasswordValid","selectedRole","setSelectedRole","dropDownRoleOpen","setDropDownRoleOpen","responseText","setResponseText","modalHtmlFN","toggleModalFN","modalHtmlUN","toggleModalUN","modalHtmlResponse","toggleModalResponse","addEmployee","employeeData","orderDetails","setOrderDetails","paymentDetails","setPaymentDetails","confirmModalShow","setConfirmModalShow","toggleConfirmationModal","getOrderDetails","payments","confirmationModalHtml","outline","cancelOrder","CardBody","Table","responsive","hover","scope","_type","payment","date_of_payment","payment_type","Settings","startingOrderNumber","setStartingOrderNumber","getVAT","getStartingOrderNumber","order_number","doSetVAT","doSetStartingOrderNumber","ViewExpenses","dropDownByType","setDropDownByType","expenseDate","setExpenseDate","byTypeSelected","setByTypeSelected","expensesList","setExpensesList","bt","sort_by","getExpenses","bordered","expense","date_added","expenditure_type","vehicle_number","balance","amount_spent","AddExpenses","dropDownExpenseType","setDropDownExpenseType","dropDownVehicleNumber","setDropDownVehicleNumber","vehicleNumberArray","setVehicleNumberArray","expenseAmount","setExpenseAmount","cashOnHand","setCashOnHand","setDescription","billNumber","setBillNumber","vehicleNumberSelected","setVehicleNumberSelected","expenseTypeSelected","setExpenseTypeSelected","vehicle","cash_on_hand","expense_type","bill_number","addExpense","Expenses","AllRoutes","exact","Order","rootReducer","combineReducers","action","tempState","isArray","library","add","faHome","faCartPlus","faSearch","faEdit","faHandHoldingUsd","faInfoCircle","faWindowClose","faCogs","faUserPlus","faMoneyBillWave","faFilter","faCheckCircle","faUnlock","faPrint","store","createStore","reducers","composeWithDevTools","applyMiddleware","promise","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46c753b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const AUTH_BASE_URL = \"/auth\";\nexport const LOAD_LOGIN = `${AUTH_BASE_URL}/login`;\nexport const LOAD_LOGOUT = `${AUTH_BASE_URL}/logout`;\n\nexport const NEW_ORDER = `/new-order`;\nexport const ALL_ORDERS = `/all-orders`;\nexport const ORDER = `/order`;\n\nexport const EMPLOYEES_BASE_URL = \"/employees\";\nexport const ADD_EMPLOYEE = `/add-employee`;\nexport const RESET_EMPLOYEE_PASSWORD = `${EMPLOYEES_BASE_URL}/employee-password-reset`;\n\nexport const SETTINGS_BASE_URL = \"/settings\";\nexport const CHANGE_PASSWORD = `/change-password`;\n\nexport const HOME = \"\";\nexport const BASE_ROUTE = \"/\";\nexport const LOAD_APP = \"/\";\nexport const EXPENSES = \"/expense\";\nexport const SETTINGS = \"/settings\";\n\nexport const DASHBOARD_EMPLOYEE = \"/dashboard-employee\";\nexport const DASHBOARD_ADMIN = \"/dashboard-admin\";\n\nexport const ERROR_404 = \"/error404\";\n\nexport const HELP = process.env.PUBLIC_URL + \"/user-guide/I-RMS.html\";\n","\n\n/**\n * Ultity functions\n * -----------------------------------------------\n *      * get the base path of given url \n * ! Important , get the base URL\n */\nexport function GetPath(path) {\n    var len = path.split('/');\n\n    if (len.length > 3)\n        return '/' + len[1] + '/' + len[2];\n\n    return path;\n};\n\nexport function getPascalCase(text, splitRegex = ' ') {\n    var re = new RegExp(splitRegex);\n    var inputTextArray = text.split(re);\n\n    var result = [];\n\n    inputTextArray.forEach(element => {\n        result.push(element.charAt(0).toUpperCase() + element.slice(1).trim());\n    });\n\n    var pascalText = result.join(\" \");\n    return pascalText;\n}\n\n\nexport function isValidJSON(text) {\n    try {\n        JSON.parse(text);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nexport function sortObject(o) {\n    return Object.keys(o).sort().reduce((r, k) => (r[k] = o[k], r), {});\n}\n\nexport function pad(num) {\n    return (\"0\" + num).slice(-2);\n}\n\nexport function hhmmss(mins) {\n    var secs = mins * 60;\n    var minutes = Math.floor(secs / 60);\n    secs = secs % 60;\n    var hours = Math.floor(minutes / 60)\n    minutes = minutes % 60;\n    return `${hours}:${minutes}`;\n    // return pad(hours)+\":\"+pad(minutes)+\":\"+pad(secs); for old browsers\n}\n\n\nexport function deepCompare(x, y) {\n    'use strict';\n\n    if (x === null || x === undefined || y === null || y === undefined) { return x === y; }\n    // after this just checking type of one would be enough\n    if (x.constructor !== y.constructor) { return false; }\n    // if they are functions, they should exactly refer to same one (because of closures)\n    if (x instanceof Function) { return x === y; }\n    // if they are regexps, they should exactly refer to same one (it is hard to better equality check on current ES)\n    if (x instanceof RegExp) { return x === y; }\n    if (x === y || x.valueOf() === y.valueOf()) { return true; }\n    if (Array.isArray(x) && x.length !== y.length) { return false; }\n\n    // if they are dates, they must had equal valueOf\n    if (x instanceof Date) { return false; }\n\n    // if they are strictly equal, they both need to be object at least\n    if (!(x instanceof Object)) { return false; }\n    if (!(y instanceof Object)) { return false; }\n\n    // recursive object equality check\n    var p = Object.keys(x);\n    return Object.keys(y).every(function (i) { return p.indexOf(i) !== -1; }) &&\n        p.every(function (i) { return deepCompare(x[i], y[i]); });\n}\n\n\nexport function hexToRgbA(hex) {\n    var c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length == 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = '0x' + c.join('');\n        return 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',0.3)';\n    }\n    return '#2196F3';\n}\n\nexport function formatNumber(num) {\n    if (num) {\n        return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    }\n    return num;\n}\n\nexport const byteCode = {\n    _keyStr: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n\n    encode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = byteCode._utf8_encode(input);\n\n        while (i < input.length) {\n\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n\n        }\n\n        return output;\n    },\n\n\n    decode: function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n\n        }\n\n        output = byteCode._utf8_decode(output);\n\n        return output;\n\n    },\n\n    _utf8_encode: function (string) {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    },\n\n    _utf8_decode: function (utftext) {\n        var string = \"\";\n        var i = 0;\n        var c = 0;\n        var c3 = 0;\n        var c2 = 0;\n\n        while (i < utftext.length) {\n\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            }\n            else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            }\n            else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n\n        }\n\n        return string;\n    }\n}","const PROTOCOL = \"http\";\n\nconst SERVER_IP = \"18.188.236.142\";\nconst PORT = \"4000\";\n\n// const SERVER_IP = \"localhost\";\n// const PORT = '8080';\n\nexport const SERVER_PATH = `${PROTOCOL}://${SERVER_IP}:${PORT}`;\n\nexport const ROOT_URL = `${SERVER_PATH}/api`;\n\n// ====================================================================================================\n\nexport const PRODUCT_TYPES = `${ROOT_URL}/product-types`;\nexport const PRODUCTS_WITH_TYPE_ID = `${ROOT_URL}/products-with-type-id`;\nexport const NEW_ORDER = `${ROOT_URL}/new-order`;\nexport const ALL_ORDERS = `${ROOT_URL}/all-orders`;\nexport const ADD_ORDER_PAYMENT = `${ROOT_URL}/add-order-payment`;\nexport const UPDATE_DELIVERY_DATE = `${ROOT_URL}/update-date`;\nexport const ADD_NEW_EMPLOYEE = `${ROOT_URL}/add-employee`;\nexport const GET_ALL_EMPLOYEES = `${ROOT_URL}/all-employees`;\nexport const GET_ALL_VEHICLE_NUMBERS = `${ROOT_URL}/get-vehicle-list`;\nexport const GET_EXPENSES = `${ROOT_URL}/get-expenses`;\nexport const GET_ORDER_DETAIL = `${ROOT_URL}/order-detail`;\nexport const GENERATE_RECEIPT = `${ROOT_URL}/generate-pdf`;\nexport const CANCEL_ORDER = `${ROOT_URL}/cancel-order`;\nexport const EMPLOYEE_TOTALS = `${ROOT_URL}/employee-totals`;\nexport const GENERATE_CASH_REPORT = `${ROOT_URL}/generate-cash-report-pdf`;\nexport const GENERATE_LEDGER_REPORT = `${ROOT_URL}/generate-ledger-pdf`;\nexport const USER_BASE_URL = `${ROOT_URL}/accounts/user`;\nexport const CHANGE_PASSWORD = `${ROOT_URL}/change-password`;\nexport const SET_VAT = `${ROOT_URL}/set-vat`;\nexport const GET_VAT = `${ROOT_URL}/get-vat`;\nexport const SET_STARTING_ORDER_NUMBER = `${ROOT_URL}/set-starting-order-number`;\nexport const GET_STARTING_ORDER_NUMBER = `${ROOT_URL}/get-starting-order-number`;\nexport const ADD_EXPENSE = `${ROOT_URL}/add-expense`;\n\nexport const AUTH_BASE_URL = `${SERVER_PATH}/auth`;\nexport const USER_AUTHENITCATION = `${AUTH_BASE_URL}/signin`;\n","import axios from 'axios';\n\nimport { USER_AUTHENITCATION, USER_BASE_URL } from '../config/rest_endpoints'\nimport { getPascalCase, isValidJSON } from '../assets/js/helper';\nimport { LOAD_LOGIN } from '../components/router/routeConstants';\nexport const LOGIN = \"login\";\nexport const ACTIVE_USER = \"save_user\";\nexport const NOTIFICATION = \"notification\";\nexport const LEAVE_TYPES = \"leave_types\";\n\naxios.interceptors.request.use(request => {\n    if (isValidJSON(sessionStorage.getItem('user'))) {\n        var user = JSON.parse(sessionStorage.getItem('user'));\n        if (user) {\n            request['headers']['Authorization'] = `Bearer ${user.jwt_token}`;\n        }\n        return request\n    }\n})\n\naxios.interceptors.response.use(response => {\n    if (response.data === \"\") {\n        response.data = [];\n    }\n    return response;\n});\n\n/**\n * This function will convert the data into select options\n * @param {*} responseData \n */\nexport function makeList(responseData, valueKey, labelKey, showID = false) {\n    for (var i = 0; i < responseData.length; i++) {\n        responseData[i][\"value\"] = responseData[i][valueKey];\n        if (showID) {\n            responseData[i][\"label\"] = `${getPascalCase(responseData[i][labelKey])} (${responseData[i][valueKey]})`;\n        }\n        else {\n            responseData[i][\"label\"] = `${getPascalCase(responseData[i][labelKey])}`;\n        }\n    }\n    return responseData\n}\n\nexport function makeListFromObj(responseData, valueKey, labelKey, showID = false) {\n    var list = [];\n    for (var key in responseData) {\n        if (showID) {\n            list.push({ value: responseData[key][valueKey], label: `${getPascalCase(responseData[key][labelKey])} (${responseData[key][valueKey]})` });\n        }\n        else {\n            list.push({ value: responseData[key][valueKey], label: `${getPascalCase(responseData[key][labelKey])}` });\n        }\n    }\n    return list;\n}\n\nexport function makeListFromSingleObj(responseData) {\n    var list = [];\n    for (var key in responseData) {\n        list.push({ value: key, label: getPascalCase(responseData[key]) });\n    }\n    return list;\n}\n\nexport function login(loginDetails) {\n    return function (dispatch) {\n        axios.defaults.withCredentials = true;\n        axios({\n            method: 'post',\n            url: USER_AUTHENITCATION,\n            data: loginDetails,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json'\n            }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    dispatch({\n                        type: ACTIVE_USER,\n                        payload: res\n                    })\n\n                } else {\n                    console.log(\"Network Error\")\n                }\n            }).catch(error => {\n                var c_error = error.response;\n                if (c_error === undefined) {\n                    c_error = { \"data\": { \"message\": \"Network Error\" } };\n                }\n                dispatch({\n                    type: ACTIVE_USER,\n                    payload: c_error\n                })\n            });\n    }\n}\n\nexport function fetchUser(user) {\n    axios.defaults.timeout = 80000;\n    axios.defaults.withCredentials = true;\n    return function (dispatch) {\n        axios({\n            method: 'get',\n            url: `${USER_BASE_URL}/${user.empID}`\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    if (res.data.success === true) {\n                        dispatch({\n                            type: ACTIVE_USER,\n                            payload: res\n                        })\n                    } else {\n                        sessionStorage.removeItem('user');\n                    }\n\n                } else {\n                    console.log(\"Network Error\")\n                }\n\n            }).catch(error => {\n                sessionStorage.removeItem('user');\n                var c_error = error.response;\n                if (c_error === undefined) {\n                    c_error = { \"data\": { \"message\": \"Network Error\" } };\n                }\n                dispatch({\n                    type: ACTIVE_USER,\n                    payload: c_error\n                })\n            });\n    }\n}","export const bloodGroup = [\n  { value: \"O+\", label: \"O+\" },\n  { value: \"A+\", label: \"A+\" },\n  { value: \"B+\", label: \"B+\" },\n  { value: \"AB+\", label: \"AB+\" },\n  { value: \"O-\", label: \"O-\" },\n  { value: \"A-\", label: \"A-\" },\n  { value: \"B-\", label: \"B-\" },\n  { value: \"AB-\", label: \"AB-\" },\n];\n\nexport const dateFormat = \"YYYY-MMM-DD\";\nexport const RenderDateForm = \"DD MMM, YYYY\";\n\nexport const Gender = [\n  { value: \"Male\", label: \"Male\" },\n  { value: \"Female\", label: \"Female\" },\n];\n\nexport const LeaveStatusWithAll = [\n  { value: \"all\", label: \"All\", render: true },\n  { value: \"approved\", label: \"Approved\", render: true },\n  { value: \"notapproved\", label: \"Rejected\", render: true },\n  { value: \"pending\", label: \"Pending\", render: true },\n  { value: \"withdrawn\", label: \"Withdrawn\", render: true },\n  { value: \"deleted\", label: \"Deleted\", render: true },\n];\n\nexport const LeaveStatus = [\n  { value: \"approved\", label: \"Approved\", render: true },\n  { value: \"notapproved\", label: \"Rejected\", render: true },\n  { value: \"pending\", label: \"Pending\", render: true },\n  { value: \"withdrawn\", label: \"Withdrawn\", render: true },\n  { value: \"deleted\", label: \"Deleted\", render: true },\n];\n\nexport const LeaveStatusPending = [\n  { value: \"approved\", label: \"Approved\", render: true },\n  { value: \"notapproved\", label: \"Rejected\", render: true },\n  { value: \"pending\", label: \"Pending\", render: true },\n];\n\nexport const EmployeeStatus = [\n  { value: \"probation\", label: \"Probation\" },\n  { value: \"current\", label: \"Permanent\" },\n  { value: \"resign\", label: \"Resign\" },\n  { value: \"layoff\", label: \"LayOff\" },\n  { value: \"internee\", label: \"Intern\" },\n];\n\nexport const maritalStatus = [\n  { value: \"single\", label: \"Single\" },\n  { value: \"married\", label: \"Married\" },\n  { value: \"divorced\", label: \"Divorced\" },\n  { value: \"widowed\", label: \"Widowed\" },\n  { value: \"separated\", label: \"Separated\" },\n];\n\nexport const actionOptions = [\n  { value: \"Add\", label: \"Add\" },\n  { value: \"Update\", label: \"Update\" },\n  { value: \"Delete\", label: \"Delete\" },\n];\nexport const religions = [\n  { value: \"Christianity\", label: \"Christianity\" },\n  { value: \"Atheist\", label: \"Atheist\" },\n  { value: \"Hinduism\", label: \"Hinduism\" },\n  { value: \"Buddhism\", label: \"Buddhism\" },\n  { value: \"Chinese Traditional\", label: \"Chinese Traditional\" },\n  { value: \"Ethnic Religions \", label: \"Ethnic Religions \" },\n  { value: \"African Traditional\", label: \"African Traditional\" },\n  { value: \"Sikhism\", label: \"Sikhism\" },\n  { value: \"Spiritism\", label: \"Spiritism\" },\n  { value: \"Judaism\", label: \"Judaism\" },\n  { value: \"Jainism\", label: \"Jainism\" },\n  { value: \"Shinto\", label: \"Shinto\" },\n  { value: \"Cao Dai\", label: \"Cao Dai\" },\n  { value: \"Zoroastrianism\", label: \"Zoroastrianism\" },\n  { value: \"Tenrikyo\", label: \"Tenrikyo\" },\n  { value: \"Neo-Paganism\", label: \"Neo-Paganism\" },\n  { value: \"Unitarian Universalism\", label: \"Unitarian Universalism\" },\n  { value: \"Rastafari\", label: \"Rastafari\" },\n  { value: \"Primal-Indigenous\", label: \"Primal-Indigenous\" },\n  { value: \"Bahai\", label: \"Bahai\" },\n  { value: \"Islam\", label: \"Islam\" },\n  { value: \"Other\", label: \"Other\" },\n];\n\nexport const Nationality = [\n  { value: \"Pakistani\", label: \"Pakistani\" },\n  { value: \"German\", label: \"German\" },\n];\n\nexport const nok = [\n  { value: \"grandFather\", label: \"Grand Father\" },\n  { value: \"grandMother\", label: \"Grand Mother\" },\n  { value: \"father\", label: \"Father\" },\n  { value: \"mother\", label: \"Mother\" },\n  { value: \"brother\", label: \"Brother\" },\n  { value: \"sister\", label: \"Sister\" },\n  { value: \"wife\", label: \"Wife\" },\n  { value: \"child\", label: \"Child\" },\n  { value: \"uncle\", label: \"Uncle\" },\n  { value: \"aunt\", label: \"Aunt\" },\n  { value: \"cousin\", label: \"Cousin\" },\n  { value: \"Guardian\", label: \"Guardian\" },\n];\n\nexport const boolean = [\n  { value: \"1\", label: \"Yes\" },\n  { value: \"0\", label: \"No\" },\n];\n\nexport const halfFullDay = [\n  { value: \"1\", label: \"Half Day\" },\n  { value: \"0\", label: \"Full Day\" },\n];\n\nexport const months = [\n  { value: 1, label: \"Jan\" },\n  { value: 2, label: \"Feb\" },\n  { value: 3, label: \"Mar\" },\n  { value: 4, label: \"Apr\" },\n  { value: 5, label: \"May\" },\n  { value: 6, label: \"Jun\" },\n  { value: 7, label: \"Jul\" },\n  { value: 8, label: \"Aug\" },\n  { value: 9, label: \"Sep\" },\n  { value: 10, label: \"Oct\" },\n  { value: 11, label: \"Nov\" },\n  { value: 12, label: \"Dec\" },\n];\n\nexport const monthsObject = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\",\n};\n\nexport const monthsObjectMap = {\n  january: \"Jan\",\n  february: \"Feb\",\n  march: \"Mar\",\n  april: \"Apr\",\n  may: \"May\",\n  june: \"Jun\",\n  july: \"Jul\",\n  august: \"Aug\",\n  september: \"Sep\",\n  october: \"Oct\",\n  november: \"Nov\",\n  december: \"Dec\",\n};\n\nexport const monthListWithAllMonthOption = [\n  {\n    id: 0,\n    name: \"All Months\",\n  },\n  {\n    id: 1,\n    name: \"January\",\n  },\n  {\n    id: 2,\n    name: \"February\",\n  },\n  {\n    id: 3,\n    name: \"March\",\n  },\n  {\n    id: 4,\n    name: \"April\",\n  },\n  {\n    id: 5,\n    name: \"May\",\n  },\n  {\n    id: 6,\n    name: \"June\",\n  },\n  {\n    id: 7,\n    name: \"July\",\n  },\n  {\n    id: 8,\n    name: \"August\",\n  },\n  {\n    id: 9,\n    name: \"September\",\n  },\n  {\n    id: 10,\n    name: \"October\",\n  },\n  {\n    id: 11,\n    name: \"November\",\n  },\n  {\n    id: 12,\n    name: \"December\",\n  },\n];\n\nexport const monthList = [\n  {\n    id: 1,\n    name: \"January\",\n  },\n  {\n    id: 2,\n    name: \"February\",\n  },\n  {\n    id: 3,\n    name: \"March\",\n  },\n  {\n    id: 4,\n    name: \"April\",\n  },\n  {\n    id: 5,\n    name: \"May\",\n  },\n  {\n    id: 6,\n    name: \"June\",\n  },\n  {\n    id: 7,\n    name: \"July\",\n  },\n  {\n    id: 8,\n    name: \"August\",\n  },\n  {\n    id: 9,\n    name: \"September\",\n  },\n  {\n    id: 10,\n    name: \"October\",\n  },\n  {\n    id: 11,\n    name: \"November\",\n  },\n  {\n    id: 12,\n    name: \"December\",\n  },\n];\n\nexport const pages = [\n  { value: 5, label: \"5\" },\n  { value: 10, label: \"10\" },\n  { value: 20, label: \"20\" },\n  { value: 50, label: \"50\" },\n  { value: 100, label: \"100\" },\n];\n\nexport const positions = [\n  { value: \"domain_head\", label: \"People Coordinator\" },\n  { value: \"company_head\", label: \"Company Head\" },\n  { value: \"team_lead\", label: \"Team Lead\" },\n  { value: \"human_resource\", label: \"Human Resource\" },\n  { value: \"employee\", label: \"Employee\" },\n];\n\nexport const positionsWithoutEmployee = [\n  { value: \"domain_head\", label: \"People Coordinator\" },\n  { value: \"company_head\", label: \"Company Head\" },\n  { value: \"team_lead\", label: \"Team Lead\" },\n  { value: \"human_resource\", label: \"Human Resource\" },\n];\n\nexport const heatmapColors = {\n  0: \"#fde5d9\",\n  1: \"#fcbba1\",\n  2: \"#fc6b4b\",\n  3: \"#f13c37\",\n  4: \"#cc1821\",\n};\n\nexport const colors = {\n  a: \"#2196f3\",\n  b: \"#ec407a\",\n  c: \"#ff9800\",\n  d: \"#66bb6a\",\n  e: \"#5c6bc0\",\n  f: \"#ef5350\",\n  g: \"#8d6e63\",\n  h: \"#26a59a\",\n  i: \"#ff9b12\",\n  j: \"#343434\",\n  k: \"#39589e\",\n  l: \"#7886cb\",\n  m: \"#26a59a\",\n  n: \"#6A1B9A\",\n  o: \"#283593\",\n  p: \"#5C6BC0\",\n  q: \"#4db6ab\",\n  r: \"#444444\",\n  s: \"#888888\",\n  t: \"#37474F\",\n  u: \"#4E342E\",\n  v: \"#FF7043\",\n  w: \"#263238\",\n  x: \"#009688\",\n  y: \"#00bcd4\",\n  z: \"#8BC34A\",\n};\n\nexport const company = \"iai\";\n\nexport const defaultPermissionsList =\n  \"/,/dashboard,/new-order,/order,/all-orders,/auth/login,/auth/logout,/settings/change-password,/settings/view-profile,/error404,/leaves/view-leaves\";\n\nexport const localPermissions = [\n  \"/auth/login\",\n  \"/auth/logout\",\n  \"/\",\n  \"/dashboard-employee\",\n  \"/dashboard-domainhead\",\n  \"/dashboard-admin\",\n\n  \"/new-order\",\n  \"/all-orders\",\n  \"/expense\",\n\n  \"/employees\",\n  \"/employees/add-employee\",\n  \"/employees/edit-employee\",\n  \"/add-employee\",\n\n  \"/configurations\",\n\n  \"/settings\",\n  \"/error404\",\n];\nexport default localPermissions;\n// TODO: Remove /add-employee\n\nexport const expenseTypes = [\n  \"Vehicle\",\n  \"Petrol\",\n  \"Food\",\n  \"Cash Purchase\",\n  \"Salary\",\n  \"Other\",\n];\n\nexport const byType = [\"By Day\", \"By Month\", \"By Year\"];\n\nexport const cashDisposalTypes = [\"Bank\", \"Self\"];\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nimport { ERROR_404, LOAD_LOGIN } from \"./routeConstants\";\nimport { GetPath, isValidJSON } from \"../../assets/js/helper\";\n\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"../../actions\";\nimport localPermissions, {\n  defaultPermissionsList\n} from \"../../config/static_lists\";\n// import CustomLoader from '../common/loader';\n\nclass ProtectedRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validToken: false\n    };\n\n    this.isAuthorizedRoute = this.isAuthorizedRoute.bind(this);\n    this.CheckForToken = this.isUserLoggedIn.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    if (_.isEmpty(this.props.activeUser.user)) {\n      if (isValidJSON(sessionStorage.getItem(\"user\"))) {\n        var user = JSON.parse(sessionStorage.getItem(\"user\"));\n        if (user && typeof user !== \"string\") {\n          if (\"empID\") {\n            this.props.fetchUser(user);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * check the current routing url against authorized urls of users\n   */\n  isAuthorizedRoute() {\n    var path = GetPath(this.props.path);\n    var user_permission = [];\n    user_permission = localPermissions;\n    if (this.props.activeUser.user[\"permissions\"]) {\n      user_permission = this.props.activeUser.user[\"permissions\"];\n    }\n    // var user_permission = [...this.state.permission];\n    var idx = user_permission.indexOf(path);\n\n    if (path == \"*\") return true;\n\n    return idx >= 0;\n  }\n\n  isLoginPath() {\n    var path = GetPath(this.props.path);\n    if (path == \"/auth/login\") {\n      return true;\n    }\n    return false;\n  }\n\n  checkFor404() {\n    var path = GetPath(this.props.path);\n    return path == \"/error404\";\n  }\n\n  /**\n   * check that user is logged in or not\n   */\n  isUserLoggedIn() {\n    if (isValidJSON(sessionStorage.getItem(\"user\"))) {\n      var user = JSON.parse(sessionStorage.getItem(\"user\"));\n      if (user && typeof user !== \"string\") {\n        if (\"empID\" in user && \"jwt_token\" in user) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Main render Function\n   * ------------------------------\n   *\n   */\n  render() {\n    const { component: Component, ...props } = this.props;\n    var __html = \"\";\n    // var __html = <div className=\"d-flex justify-content-center align-items-center loading-main\">\n    //     <CustomLoader width={ 200 } height={ 200 } customstyles={ {} } />\n    // </div>\n    /* if user is logged in */\n    if (this.isUserLoggedIn()) {\n      /* first fetch the user details from server */\n      if (!_.isEmpty(this.props.activeUser.user)) {\n        if (\"message\" in this.props.activeUser.user) {\n          sessionStorage.removeItem(\"user\");\n          __html = (\n            <Route {...props} render={props => <Redirect to={LOAD_LOGIN} />} />\n          );\n        } else if (this.isLoginPath()) {\n          __html = <Route {...props} render={props => <Redirect to={\"/\"} />} />;\n        } else if (this.isAuthorizedRoute()) {\n          __html = (\n            <Route {...props} render={props => <Component {...props} />} />\n          );\n        } else {\n          __html = (\n            <Route {...props} render={props => <Redirect to={ERROR_404} />} />\n          );\n        }\n      }\n    } else {\n      sessionStorage.removeItem(\"user\");\n      if (this.isLoginPath()) {\n        __html = (\n          <Route {...props} render={props => <Component {...props} />} />\n        );\n      } else {\n        __html = (\n          <Route {...props} render={props => <Redirect to={LOAD_LOGIN} />} />\n        );\n      }\n    }\n\n    return __html;\n  }\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default connect(mapStateToProps, { fetchUser })(ProtectedRoute);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap4-modal\";\nimport { login } from \"../../actions/index\";\n// import { Notifications } from '../common/notification';\nimport axios from \"axios\";\nimport { RESET_PASSWORD } from \"../../config/rest_endpoints\";\nimport { byteCode } from \"../../assets/js/helper\";\nimport { company } from \"../../config/static_lists\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      startAnimationSpinner: false,\n      startAnimationError: false,\n      modalIsOpen: false,\n      recoveryEmail: \"\",\n      isRecoveringPassword: false,\n      recoveryEmailError: false\n    };\n  }\n\n  onLogin() {\n    if (this.state.username.trim() !== \"\" && this.state.password !== \"\") {\n      this.setState({ startAnimationSpinner: true });\n\n      var username = byteCode.encode(this.state.username.trim());\n      var password = byteCode.encode(this.state.password);\n\n      const loginDetails = `grant_type=password&username=${username}&password=${password}`;\n      this.props.login(loginDetails);\n    } else {\n      this.setState({ error: \"Username & Password must be provided.\" });\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false, recoveryEmailError: false });\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  onUsernameChange(e) {\n    this.setState({ username: e.target.value });\n  }\n\n  onPasswordChange(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  handleChange(e) {\n    var recoveryEmailError = this.checkForRecoveryEmail(e.target.value);\n    this.setState({ recoveryEmail: e.target.value, recoveryEmailError });\n  }\n\n  checkForRecoveryEmail(value) {\n    var recoveryEmailError = false;\n    if (value.trim() === \"\") {\n      recoveryEmailError = true;\n    }\n\n    return recoveryEmailError;\n  }\n\n  checkForLoggedUser() {\n    return sessionStorage.getItem(\"user\") !== null ? true : false;\n  }\n\n  animationEndError() {\n    this.setState({ startAnimationError: false });\n  }\n\n  UNSAFE_componentWillMount() {\n    var response = this.props.activeUser;\n    if (response[\"message\"]) {\n      if (response[\"message\"] === \"Network Error\") {\n        this.setState({\n          error: \"Network Error!\",\n          startAnimationSpinner: false,\n          startAnimationError: true\n        });\n      }\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    var response = newProps.activeUser;\n    if (response[\"message\"]) {\n      if (response[\"message\"] === \"Network Error\") {\n        this.setState({\n          error: \"Network Error!\",\n          startAnimationSpinner: false,\n          startAnimationError: true\n        });\n        const elm = this.refs.errorAnimation;\n        elm.addEventListener(\"animationend\", this.animationEndError.bind(this));\n      } else if (response[\"message\"] === \"Something Went Wrong\") {\n        this.setState({\n          error: \"Something Went Wrong!\",\n          startAnimationSpinner: false,\n          startAnimationError: true\n        });\n        const elm = this.refs.errorAnimation;\n        elm.addEventListener(\"animationend\", this.animationEndError.bind(this));\n      }\n    } else if (!this.checkForLoggedUser()) {\n      if (response[\"error\"]) {\n        if (\"error_description\" in response) {\n          this.setState({\n            error: response[\"error_description\"],\n            startAnimationSpinner: false,\n            startAnimationError: true\n          });\n        } else {\n          this.setState({\n            error: response[\"error\"],\n            startAnimationSpinner: false,\n            startAnimationError: true\n          });\n        }\n        const elm = this.refs.errorAnimation;\n        elm.addEventListener(\"animationend\", this.animationEndError.bind(this));\n      } else {\n        var user = response.user;\n        sessionStorage.setItem(\"user\", JSON.stringify(user));\n        this.setState({\n          username: \"\",\n          password: \"\",\n          startAnimationSpinner: false\n        });\n        this.props.history.push(\"/\");\n      }\n    }\n  }\n\n  _handleKeyPress(e) {\n    if (e.key === \"Enter\") {\n      this.onLogin();\n    }\n  }\n\n  onRecoverEmail() {\n    var recoveryEmailError = this.checkForRecoveryEmail(\n      this.state.recoveryEmail\n    );\n    if (recoveryEmailError) {\n      this.setState({ recoveryEmailError });\n    }\n    // else {\n    //     this.setState({ isRecoveringPassword: true, recoveryEmailError });\n    //     var headers = {\n    //         username: this.state.recoveryEmail\n    //     }\n    //     axios.post(RESET_PASSWORD, {}, { headers }).then(res => {\n    //         Notifications.notify(\"New password sent via email.\", \"Success\", \"success\");\n    //         this.closeModal();\n    //         this.setState({ isRecoveringPassword: false, recoveryEmail: '' });\n    //     }).catch(error => {\n    //         this.setState({ isRecoveringPassword: false });\n    //         var message = \"Something went wrong while resetting the password!\";\n    //         if ('response' in error) {\n    //             message = error.response.data.message;\n    //         }\n    //         Notifications.notify(message, \"Error\", \"error\");\n    //     })\n    // }\n  }\n\n  render() {\n    var errorAnimationClass = \"\";\n    if (this.state.startAnimationError) {\n      errorAnimationClass = \"animated fadeIn\";\n    }\n\n    var recoveryEmailError = \"\";\n    if (this.state.recoveryEmailError) {\n      recoveryEmailError = (\n        <div className=\"alert alert-danger alert-styled-left alert-arrow-left \">\n          Enter your email to reset the password.\n        </div>\n      );\n    }\n\n    var modal = (\n      <Modal\n        visible={this.state.modalIsOpen}\n        onClickBackdrop={this.closeModal.bind(this)}\n        dialogClassName=\"modal-sm\"\n      >\n        <div className=\"card mb-0\">\n          <div className=\"card-body\">\n            <div className=\"text-center mb-3\">\n              <i className=\"icon-spinner11 icon-2x text-warning border-warning border-3 rounded-round p-3 mb-3 mt-1\"></i>\n              <h5 className=\"mb-0\">Password recovery</h5>\n              <span className=\"d-block text-muted\">\n                We'll send you instructions in email\n              </span>\n            </div>\n            {recoveryEmailError}\n            <div className=\"form-group form-group-feedback form-group-feedback-right\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Your email\"\n                value={this.state.recoveryEmail}\n                onChange={this.handleChange.bind(this)}\n              />\n              <div className=\"form-control-feedback\">\n                <i className=\"icon-mail5 text-muted\"></i>\n              </div>\n            </div>\n\n            <button\n              className=\"btn bg-blue btn-block\"\n              disabled={this.state.isRecoveringPassword}\n              onClick={this.onRecoverEmail.bind(this)}\n            >\n              <i\n                className={\n                  this.state.isRecoveringPassword\n                    ? \"icon-spinner11 spinner mr-2\"\n                    : \"icon-spinner11 mr-2\"\n                }\n              ></i>{\" \"}\n              {this.state.isRecoveringPassword\n                ? \"Resetting...\"\n                : \"Reset password\"}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    );\n\n    var path = process.env.PUBLIC_URL + `/assets/images/logo.png`;\n    var loginCover = {\n      background: `url(/assets/images/bg-login.jpg) no-repeat`,\n      backgroundSize: \"cover\"\n    };\n    return (\n      <div className=\"virtual-body\">\n        {modal}\n        <div className=\"page-content color-login bgc-theme\" style={loginCover}>\n          <div className=\"content-wrapper\">\n            <div className=\"content d-flex justify-content-center align-items-center\">\n              <div className=\"login-form\">\n                <div className=\"card mb-0\">\n                  <div className=\"card-body\">\n                    <div className=\"text-center mb-3\">\n                      <a>\n                        <img\n                          src={path}\n                          className=\"img-fluid login-image c-width-70 mb-4\"\n                          style={{ backgroundSize: \"cover\" }}\n                        />\n                      </a>\n                      <h5 className=\"mb-0 color-login\">\n                        Login to your account\n                      </h5>\n                      <span className=\"d-block text-muted\">\n                        Your credentials\n                      </span>\n                    </div>\n\n                    <div\n                      ref=\"errorAnimation\"\n                      className={\n                        this.state.error === \"\"\n                          ? \"alert alert-danger alert-styled-left alert-arrow-left hide-container\"\n                          : `alert alert-danger alert-styled-left alert-arrow-left ${errorAnimationClass}`\n                      }\n                    >\n                      {this.state.error}\n                    </div>\n\n                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Username\"\n                        onKeyPress={this._handleKeyPress.bind(this)}\n                        value={this.state.username}\n                        onChange={this.onUsernameChange.bind(this)}\n                      />\n                      <div className=\"form-control-feedback\">\n                        <i className=\"icon-user text-muted\"></i>\n                      </div>\n                    </div>\n\n                    <div className=\"form-group form-group-feedback form-group-feedback-left\">\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        onKeyPress={this._handleKeyPress.bind(this)}\n                        value={this.state.password}\n                        onChange={this.onPasswordChange.bind(this)}\n                      />\n                      <div className=\"form-control-feedback\">\n                        <i className=\"icon-lock2 text-muted\"></i>\n                      </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <button\n                        onClick={this.onLogin.bind(this)}\n                        disabled={\n                          this.state.startAnimationSpinner ? true : false\n                        }\n                        className=\"btn btn-login btn-block\"\n                      >\n                        {this.state.startAnimationSpinner\n                          ? \"Authenticating\"\n                          : \"Login\"}{\" \"}\n                        <i\n                          className={\n                            this.state.startAnimationSpinner\n                              ? \"fas fa-spinner fa-spin ml-2\"\n                              : \"icon-circle-right2 ml-2\"\n                          }\n                        ></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { LOAD_LOGIN } from '../router/routeConstants';\n\nclass Logout extends Component {\n    UNSAFE_componentWillMount() {\n        sessionStorage.removeItem('user');\n        this.props.history.push(LOAD_LOGIN);\n    }\n\n    render() {\n\n        var return_div = (\n            <div className=\"container-fluid\" style={ { \"marginTop\": \"20%\" } }>\n                <div className=\"row btn-col\">\n                    <div className=\"col-5\">\n                    </div>\n                    <div className=\"col\">\n                        <div className='w-25 ma2 h4 items-center justify-center flex flex-column flex-wrap'>\n                            Loading...\n                        </div>\n                    </div>\n                    <div className=\"col-5\">\n                    </div>\n                </div>\n            </div>\n        );\n\n        return (\n            <div>\n                { return_div }\n            </div>\n        )\n    }\n\n\n};\n\nexport default withRouter(Logout);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { LOAD_LOGIN, CHANGE_PASSWORD } from \"../router/routeConstants\";\nimport { colors, company } from \"../../config/static_lists\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nvar $ = window.$;\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: [],\n      loadingNotifications: false,\n      quote: null,\n    };\n  }\n\n  componentDidMount() {\n    // Toggle min sidebar class\n    $(\".sidebar-main-toggle\").on(\"click\", function (e) {\n      e.preventDefault();\n\n      $(\"body\").toggleClass(\"sidebar-xs\").removeClass(\"sidebar-mobile-main\");\n    });\n    $(\".sidebar-mobile-main-toggle\").on(\"click\", function (e) {\n      e.preventDefault();\n      $(\"body\")\n        .toggleClass(\"sidebar-mobile-main\")\n        .removeClass(\"sidebar-mobile-secondary sidebar-mobile-right\");\n\n      if ($(\".sidebar-main\").hasClass(\"sidebar-fullscreen\")) {\n        $(\".sidebar-main\").removeClass(\"sidebar-fullscreen\");\n      }\n    });\n    $(\".sidebar-mobile-expand\").on(\"click\", function (e) {\n      e.preventDefault();\n      var $sidebar = $(this).parents(\".sidebar\"),\n        sidebarFullscreenClass = \"sidebar-fullscreen\";\n\n      if (!$sidebar.hasClass(sidebarFullscreenClass)) {\n        $sidebar.addClass(sidebarFullscreenClass);\n      } else {\n        $sidebar.removeClass(sidebarFullscreenClass);\n      }\n    });\n  }\n\n  getNotifications() {\n    // this.setState({ loadingNotifications: true });\n    // axios.get(CURRENT_ANNOUNCEMENTS).then(res => {\n    //     var notifications = res.data.data;\n    //     var { total } = res.data;\n    //     this.setState({ notifications, total, loadingNotifications: false });\n    // }).catch(error => {\n    //     this.setState({ loadingNotifications: false });\n    // })\n  }\n\n  makeQuoteData(data) {\n    var quote = \"\";\n\n    if (data !== \"\") {\n      if (\"content\" in data) {\n        if (data[\"content\"]) {\n          quote = {};\n          quote[\"content\"] = data[\"content\"];\n          if (\"author\" in data) {\n            quote[\"author\"] = data[\"author\"] ? data[\"author\"] : \"Unknown\";\n          } else {\n            quote[\"author\"] = \"Unknown\";\n          }\n        }\n      }\n    }\n\n    return quote;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeout);\n  }\n\n  logout() {\n    sessionStorage.removeItem(\"user\");\n    this.props.history.push(LOAD_LOGIN);\n  }\n\n  changePassword() {\n    this.props.history.push(CHANGE_PASSWORD);\n  }\n\n  render() {\n    var user = this.props.activeUser.user;\n    var picture = \"\";\n    var name = \"...\";\n    if (Object.keys(user).length) {\n      var profilePicture = user[\"profile_picture\"];\n      var defaultProfilePicture =\n        process.env.PUBLIC_URL + \"/assets/images/avatar.png\";\n      const initials =\n        user.first_name === \"\" || user.first_name === null\n          ? \"---\"\n          : user.first_name.charAt(0).toLowerCase();\n      const style = {\n        backgroundColor: colors[initials],\n      };\n\n      picture = (\n        <button className=\"btn rounded-round btn-icon btn-sm\" style={style}>\n          <span className=\"letter-icon text-uppercase text-white\">\n            {initials}\n          </span>\n        </button>\n      );\n\n      name = user[\"first_name\"];\n    }\n\n    var path = process.env.PUBLIC_URL + `/assets/images/${company}/header.png`;\n    var pathHeaderBackground =\n      process.env.PUBLIC_URL + `/assets/images/${company}/headerbar.png`;\n\n    var navbar_theme = {\n      backgroundPosition: \"left top\",\n      backgroundRepeatX: \"repeat\",\n      backgroundImage: `url(${pathHeaderBackground})`,\n    };\n\n    return (\n      // <!-- Main navbar -->\n      <div\n        className=\"navbar navbar-expand-md navbar-dark fixed-top bgc-theme noprint\"\n        style={navbar_theme}\n      >\n        <div className=\"navbar-brand wmin-200 c-nav-brand\">\n          <a href=\"/\" className=\"d-inline-block\">\n            <img src={path} alt=\"\" />\n          </a>\n        </div>\n\n        <div className=\"d-md-none\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbar-mobile\"\n          >\n            <i className=\"icon-tree5\"></i>\n          </button>\n          <button\n            className=\"navbar-toggler sidebar-mobile-main-toggle\"\n            type=\"button\"\n          >\n            <i className=\"icon-paragraph-justify3\"></i>\n          </button>\n        </div>\n\n        <div\n          className=\"collapse navbar-collapse c_navbar-collapse\"\n          id=\"navbar-mobile\"\n        >\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a\n                href=\"#\"\n                className=\"navbar-nav-link sidebar-control sidebar-main-toggle d-none d-md-block\"\n              >\n                <i className=\"icon-paragraph-justify3\"></i>\n              </a>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item dropdown dropdown-user text-capitalize\">\n              <a\n                href=\"#\"\n                className=\"navbar-nav-link dropdown-toggle\"\n                data-toggle=\"dropdown\"\n              >\n                {picture}\n                <span>{name}</span>\n              </a>\n\n              <div className=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  className=\"dropdown-item\"\n                  onClick={this.changePassword.bind(this)}\n                >\n                  <FontAwesomeIcon icon={[\"fas\", \"unlock\"]} className=\"mr-2\" />\n                  Change Password\n                </a>\n                <div className=\"dropdown-divider\"></div>\n                {/* <a className=\"dropdown-item\" onClick={this.customization.bind(this)}><i className=\"icon-cog\"></i> Customization</a> */}\n                <a className=\"dropdown-item\" onClick={this.logout.bind(this)}>\n                  <i className=\"icon-switch2\"></i> Logout\n                </a>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      // <!-- /main navbar -->\n    );\n  }\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default connect(mapStateToProps)(withRouter(Header));\n","import React, {Component} from 'react';\n\nclass PageHeader extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            //<!-- Page header -->\n            <div className=\"page-header page-header-light noprint\">\n                <div className=\"page-header-content header-elements-md-inline\">\n                    <div className=\"page-title\">\n                        <h4>\n                            {/* <i className={this.props.faIcon} style={{\"paddingRight\":\"10px\"}}></i> */}\n                            <span className=\"font-weight-semibold\">{this.props.header}</span>\n                        </h4>\n                        {/* <a href=\"#\" className=\"header-elements-toggle text-default d-md-none\"><i className=\"icon-more\"></i></a> */}\n                    </div>\n                </div>\n            </div>\n            //<!-- /page header -->\n        );\n    }\n}\n\nexport default PageHeader;","import {\n  LOAD_APP,\n  ADD_EMPLOYEE,\n  NEW_ORDER,\n  ALL_ORDERS,\n  SETTINGS,\n  EXPENSES,\n} from \"../router/routeConstants\";\n\nexport var naver = {\n  [LOAD_APP]: {\n    \"/\": {\n      id: \"M_LOAD_APP\",\n      name: \"Dashboard\",\n      url: LOAD_APP,\n      fa_icon: [\"fas\", \"home\"],\n    },\n    fa_icon: [\"fas\", \"home\"],\n  },\n  [NEW_ORDER]: {\n    \"/\": {\n      id: \"NEW_ORDER\",\n      name: \"New Job Order\",\n      url: NEW_ORDER,\n      fa_icon: [\"fas\", \"cart-plus\"],\n    },\n    fa_icon: [\"fas\", \"cart-plus\"],\n  },\n  [EXPENSES]: {\n    \"/\": {\n      id: \"M_LOAD_APP\",\n      name: \"Expenses\",\n      url: EXPENSES,\n      fa_icon: [\"fas\", \"money-bill-wave\"],\n    },\n    fa_icon: [\"fas\", \"money-bill-wave\"],\n  },\n  [ALL_ORDERS]: {\n    \"/\": {\n      id: \"ALL_ORDERS\",\n      name: \"All Orders\",\n      url: ALL_ORDERS,\n      fa_icon: [\"fas\", \"search\"],\n    },\n    fa_icon: [\"fas\", \"search\"],\n  },\n  [ADD_EMPLOYEE]: {\n    \"/\": {\n      id: \"M_ADD_EMPLOYEE\",\n      name: \"Add Employee\",\n      url: ADD_EMPLOYEE,\n      fa_icon: [\"fas\", \"user-plus\"],\n    },\n    fa_icon: [\"fas\", \"user-plus\"],\n  },\n  [SETTINGS]: {\n    \"/\": {\n      id: \"M_SETTINGS\",\n      name: \"Settings\",\n      url: SETTINGS,\n      fa_icon: [\"fas\", \"cogs\"],\n    },\n    fa_icon: [\"fas\", \"cogs\"],\n  },\n};\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nimport { connect } from \"react-redux\";\nimport { naver } from \"./side_menu_mapper\";\nimport { LOAD_LOGOUT } from \"../router/routeConstants\";\nimport { localPermissions } from \"../../config/static_lists\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nvar $ = window.$;\n\nclass SideMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nav_items: [],\n      render_key: \"__render__\",\n      fa_icon: \"fa_icon\",\n    };\n\n    // for getting the current path\n    this.checkCurrentURL = this.checkCurrentURL.bind(this);\n\n    // for building side menu dictionary according to the user permission\n    this.__build_render_dictionary = this.__build_render_dictionary.bind(this);\n\n    // rendering side menu item from the dictionary\n    this.__render = this.__render.bind(this);\n    this.__render_single = this.__render_single.bind(this);\n    this.__render_group = this.__render_group.bind(this);\n    this.__render_dictionary = this.__render_dictionary.bind(this);\n\n    // rendering user card on side menu\n    this.__render_mobile_navigator = this.__render_mobile_navigator.bind(this);\n  }\n\n  componentDidMount() {\n    /**\n     * JQUERY CODE\n     * ---------------\n     * required because all items of side bar required jquery event which trigger only click of that item\n     */\n\n    // Define default class names and options\n    var navClass = \"nav-sidebar\",\n      navItemClass = \"nav-item\",\n      navItemOpenClass = \"nav-item-open\",\n      navLinkClass = \"nav-link\",\n      navSubmenuClass = \"nav-group-sub\",\n      navSlidingSpeed = 250;\n\n    // Configure collapsible functionality\n    $(\".\" + navClass).each(function () {\n      $(this)\n        .find(\".\" + navItemClass)\n        .has(\".\" + navSubmenuClass)\n        .children(\".\" + navItemClass + \" > .\" + navLinkClass)\n        .not(\".disabled\")\n        .on(\"click\", function (e) {\n          e.preventDefault();\n\n          // Simplify stuff\n          var $target = $(this),\n            $navSidebarMini = $(\".sidebar-xs\")\n              .not(\".sidebar-mobile-main\")\n              .find(\".sidebar-main .\" + navClass)\n              .children(\".\" + navItemClass);\n\n          // Collapsible\n          if ($target.parent(\".\" + navItemClass).hasClass(navItemOpenClass)) {\n            $target\n              .parent(\".\" + navItemClass)\n              .not($navSidebarMini)\n              .removeClass(navItemOpenClass)\n              .children(\".\" + navSubmenuClass)\n              .slideUp(navSlidingSpeed);\n          } else {\n            $target\n              .parent(\".\" + navItemClass)\n              .not($navSidebarMini)\n              .addClass(navItemOpenClass)\n              .children(\".\" + navSubmenuClass)\n              .slideDown(navSlidingSpeed);\n          }\n\n          // Accordion\n          if (\n            $target.parents(\".\" + navClass).data(\"nav-type\") === \"accordion\"\n          ) {\n            $target\n              .parent(\".\" + navItemClass)\n              .not($navSidebarMini)\n              .siblings(\":has(.\" + navSubmenuClass + \")\")\n              .removeClass(navItemOpenClass)\n              .children(\".\" + navSubmenuClass)\n              .slideUp(navSlidingSpeed);\n          }\n        });\n    });\n\n    // Disable click in disabled navigation items\n    $(document).on(\"click\", \".\" + navClass + \" .disabled\", function (e) {\n      e.preventDefault();\n    });\n\n    // Scrollspy navigation\n    $(\".nav-scrollspy\")\n      .find(\".\" + navItemClass)\n      .has(\".\" + navSubmenuClass)\n      .children(\".\" + navItemClass + \" > .\" + navLinkClass)\n      .off(\"click\");\n\n    // Prevent dropdown from closing on click\n    $(document).on(\"click\", \".dropdown-content\", function (e) {\n      e.stopPropagation();\n    });\n\n    // Disabled links\n    $(\".navbar-nav .disabled a, .nav-item-levels .disabled\").on(\n      \"click\",\n      function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    );\n\n    // Show tabs inside dropdowns\n    $('.dropdown-content a[data-toggle=\"tab\"]').on(\"click\", function (e) {\n      $(this).tab(\"show\");\n    });\n  }\n\n  getPermissions(serverPermissions) {\n    var finalPermission = [];\n\n    localPermissions.map((permission, idx) => {\n      serverPermissions.map((serverPermission, idx) => {\n        if (permission === serverPermission) {\n          finalPermission.push(serverPermission);\n        }\n      });\n    });\n\n    return finalPermission;\n  }\n\n  checkCurrentURL() {\n    var _location = this.props.location;\n    var _path = _location.pathname.split(\"/\");\n\n    var activation = {};\n\n    if (_path.length > 2) {\n      activation[\"whoIsOpen\"] = _path[1];\n      activation[\"whoIsActive\"] = \"/\" + _path[2];\n    } else {\n      activation[\"whoIsOpen\"] = _path[1];\n      activation[\"whoIsActive\"] = \"/\" + _path[1];\n    }\n\n    return activation;\n  }\n\n  /**\n   * Buidling Side Menu Struture Before rendering\n   * ----------------------------------------------\n   * defining structure\n   *\n   * gettting user permission\n   *\n   * getting the permissable side Menu Items\n   *\n   */\n  __build_render_dictionary() {\n    if (!_.isEmpty(this.props.activeUser.user)) {\n      // rearranging permission according to the groups\n\n      // building an empty init dictionary with render:False in all keys\n      var final_renderer = {};\n      var render_key = this.state.render_key;\n\n      for (var key in naver) {\n        final_renderer[key] = {\n          [render_key]: false,\n          [this.state.fa_icon]: naver[key][\"fa_icon\"],\n        };\n      }\n      var serverPermissions = this.props.activeUser.user.permissions;\n      var permission = this.getPermissions(serverPermissions);\n\n      if (permission.length !== 0) {\n        for (var i = 0; i < permission.length; i++) {\n          var elem = permission[i].split(\"/\");\n          var parent = \"/\" + elem[1];\n          var getDetails = naver[parent];\n\n          // if that permission is renderable\n          if (getDetails) {\n            var getChildren = Object.keys(getDetails);\n            var count = getChildren.length;\n\n            if (count === 2) {\n              var temp = Object.keys(naver[parent]);\n              if (temp[0] !== \"fa_icon\") {\n                final_renderer[parent][temp[0]] = naver[parent][temp[0]];\n              } else {\n                final_renderer[parent][temp[1]] = naver[parent][temp[1]];\n              }\n              final_renderer[parent][render_key] = true;\n            } else {\n              final_renderer[parent][temp[1]] = naver[parent][temp[1]];\n            }\n            final_renderer[parent][render_key] = true;\n          } else {\n            var child_name = \"/\";\n            if (elem[2]) child_name = \"/\" + elem[2];\n            var child_details = naver[parent][child_name];\n            // if that sub permission is renderable\n            if (child_details) {\n              final_renderer[parent][child_name] = child_details;\n              final_renderer[parent][render_key] = true;\n            }\n          }\n        }\n      }\n      return final_renderer;\n    }\n    // }\n  }\n\n  /**\n   *\n   * Render Function only for Single Side Menu Item\n   *\n   * @param {any} object      containing side Menu renderring information\n   * @param {string} _key     unique key of that item\n   */\n  __render(object, _key, whoIsOpen, whoIsActive, isGroup = false) {\n    var active = whoIsActive;\n\n    if (whoIsOpen && \"/\" + whoIsOpen !== whoIsActive) {\n      active = \"/\" + whoIsOpen + whoIsActive;\n      if (active.slice(-1) === \"/\") {\n        active = active.slice(0, -1);\n      }\n    }\n    let ItemText = \"\";\n    let itemIcon = \"\";\n    if (isGroup) {\n      ItemText = object[\"name\"];\n    } else {\n      itemIcon = (\n        <div style={{ width: \"20px\" }}>\n          <FontAwesomeIcon\n            icon={object[\"fa_icon\"]}\n            className={`side-menu_icon`}\n          />\n        </div>\n      );\n      ItemText = <span className=\"ml-2\">{object[\"name\"]}</span>;\n    }\n\n    var isActive = active === object[\"url\"];\n    if (object[\"url\"] === \"/\" && active === \"/dashboard\") {\n      isActive = true;\n    }\n\n    return (\n      <li key={`${object[\"name\"]}${_key}`} className=\"nav-item\">\n        <Link\n          to={object[\"url\"]}\n          className={isActive ? `nav-link active` : `nav-link`}\n        >\n          {itemIcon}\n          {ItemText}\n        </Link>\n      </li>\n    );\n  }\n\n  /**\n   * Render function for singular dictionary\n   *\n   * @param {any} dictionary      dictionary containing group of child :: Side Menu item (single)\n   */\n  __render_single(dictionary, whoIsOpen, whoIsActive) {\n    /*\n     ** contain only single child\n     ** special key :: this.state.render_key decided either to render or not\n     */\n\n    if (dictionary[this.state.render_key]) {\n      delete dictionary[this.state.render_key];\n      delete dictionary[this.state.fa_icon];\n\n      var __html = [];\n\n      for (var key in dictionary) {\n        __html.push(\n          this.__render(dictionary[key], key, whoIsOpen, whoIsActive)\n        );\n      }\n\n      return __html;\n    }\n\n    return;\n  }\n\n  /**\n   *\n   * render for rendering sub Side Menu items\n   *\n   * @param {any} dictionary       containing group :: multiple items\n   * @param {any} Name             Name of the group\n   */\n  __render_group(dictionary, Name, whoIsOpen, whoIsActive) {\n    //console.log('open : ', whoIsOpen);\n    //console.log('active : ', whoIsActive);\n\n    let openClass = \"\";\n    let activeClass = \"\";\n    if (Name === whoIsOpen) {\n      openClass = \"nav-item-open nav-item-expanded\";\n      activeClass = \"active\";\n    }\n\n    // contains multiples childs\n    var textCapitalize = true;\n\n    if (Name === \"users\") {\n      Name = \"Employees\";\n      textCapitalize = false;\n    } else if (Name === \"ai-reports\") {\n      Name = \"AI Reports\";\n      textCapitalize = false;\n    } else {\n      Name = Name.replace(\"-\", \" \");\n      textCapitalize = true;\n    }\n\n    if (dictionary[this.state.render_key]) {\n      var FI = dictionary[this.state.fa_icon];\n\n      delete dictionary[this.state.render_key];\n      delete dictionary[this.state.fa_icon];\n\n      var _bool = false;\n\n      var _keys = Object.keys(dictionary);\n      // _keys = _keys.sort();\n      let isGroup = true;\n      var __html = (\n        <li key={Name} className={`nav-item nav-item-submenu ${openClass}`}>\n          <Link to={`#`} className={`nav-link ${activeClass}`}>\n            <div style={{ width: \"20px\" }}>\n              <i className={`${FI} side-menu_icon`} aria-hidden=\"true\">\n                {\" \"}\n              </i>\n            </div>\n            <span\n              className={\n                textCapitalize\n                  ? \"text-capitalize sidemenu-text ml-2\"\n                  : \"sidemenu-text ml-2\"\n              }\n            >\n              {\" \"}\n              {Name}{\" \"}\n            </span>\n          </Link>\n          <ul\n            className=\"nav nav-group-sub text-capitalize\"\n            data-submenu-title={Name}\n          >\n            {_keys.map((key, counter) => {\n              return this.__render(\n                dictionary[key],\n                key,\n                whoIsOpen,\n                whoIsActive,\n                isGroup\n              );\n            })}\n          </ul>\n        </li>\n      );\n\n      return __html;\n    }\n\n    return;\n  }\n\n  /**\n   *\n   * Rendering dictionary depending upon the grouping or single item\n   *\n   * @param {any} final_dictionary    final dictionary containing the final Side Menu in a defined structure\n   */\n  __render_dictionary(final_dictionary, whoIsOpen, whoIsActive) {\n    var __html = [];\n\n    var _keys = Object.keys(final_dictionary);\n    for (var i = 0; i < _keys.length; i++) {\n      // var sub_keys = Object.keys(final_dictionary[_keys[i]]).sort();\n      var sub_keys = Object.keys(final_dictionary[_keys[i]]);\n      if (sub_keys.length > 3) {\n        __html.push(\n          this.__render_group(\n            final_dictionary[_keys[i]],\n            _keys[i].split(\"/\")[1],\n            whoIsOpen,\n            whoIsActive\n          )\n        );\n      } else {\n        __html.push(\n          this.__render_single(\n            final_dictionary[_keys[i]],\n            whoIsOpen,\n            whoIsActive\n          )\n        );\n      }\n    }\n\n    return __html;\n  }\n\n  /**\n   *  Display the navigator when mobile view is activated\n   */\n  __render_mobile_navigator() {\n    return (\n      <div className=\"sidebar-mobile-toggler text-center text-grey-800\">\n        <a href=\"#\" className=\"sidebar-mobile-main-toggle\">\n          <i className=\"icon-arrow-left8\"></i>\n        </a>\n        Navigation\n        <a href=\"#\" className=\"sidebar-mobile-expand\">\n          <i className=\"icon-screen-full\"></i>\n          <i className=\"icon-screen-normal\"></i>\n        </a>\n      </div>\n    );\n  }\n\n  /**\n   *  Rendering the User card and their corresponding actions on side menu\n   */\n  __render_user_card() {\n    return (\n      <div className=\"sidebar-user\">\n        <div className=\"card-body\">\n          <div className=\"media\">\n            <div className=\"media-body\">\n              <div className=\"text-theme media-title font-weight-semibold\">\n                {this.props.activeUser.user.first_name}\n              </div>\n              <div className=\"text-theme font-size-xs opacity-50\">\n                {this.props.activeUser.user.role}\n              </div>\n            </div>\n\n            <div className=\"ml-3 align-self-center\">\n              <a href=\"#\" className=\"text-theme\" title=\"Profile Setting\">\n                <i className=\"icon-cog3\"></i>\n              </a>\n              <a href=\"#\" className=\"text-theme ml-3\" title=\"Lock Screen\">\n                <i className=\"icon-user-lock\"></i>\n              </a>\n              <a href={LOAD_LOGOUT} className=\"text-theme ml-3\" title=\"Logout\">\n                <i className=\"icon-switch2\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   *  Main render Function\n   * --------------------------------------------------------------------------------\n   *\n   * Then rearranging the user permission according to the standard template\n   *\n   * Then Render the dictionary build in the previous step\n   */\n  render() {\n    var final_dictionary = this.__build_render_dictionary();\n    var __html = <div></div>;\n    var activation = this.checkCurrentURL();\n\n    var whoIsActive = activation[\"whoIsActive\"];\n    var whoIsOpen = activation[\"whoIsOpen\"];\n\n    if (!_.isEmpty(final_dictionary))\n      __html = this.__render_dictionary(\n        final_dictionary,\n        whoIsOpen,\n        whoIsActive\n      );\n\n    return (\n      <div className=\"sidebar sidebar-light sidebar-main sidebar-fixed sidebar-expand-md noprint\">\n        {this.__render_mobile_navigator()}\n\n        <div className=\"sidebar-content side-menu-zIndex\">\n          <div className=\"card card-sidebar-mobile\">\n            <ul className=\"nav nav-sidebar\" data-nav-type=\"accordion\">\n              <li className=\"nav-item-header\">\n                <div className=\"text-uppercase font-size-xs line-height-xs text-grey-800\">\n                  Navigation\n                </div>\n                <i className=\"icon-menu\" title=\"Navigation\"></i>\n              </li>\n\n              {__html}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default connect(mapStateToProps)(withRouter(SideMenu));\n","import React from 'react';\nimport { HELP } from '../router/routeConstants';\n\nconst Footer = (props) => {\n    return (\n        // <!-- Footer -->\n        <div className=\"navbar navbar-expand-lg navbar-light\">\n            <div className=\"text-center d-lg-none w-100\">\n                <button type=\"button\" className=\"navbar-toggler dropdown-toggle\" data-toggle=\"collapse\" data-target=\"#navbar-footer\">\n                    <i className=\"icon-unfold mr-2\"></i>\n                    LMS\n                    </button>\n            </div>\n\n            <div className=\"navbar-collapse collapse\" id=\"navbar-footer\">\n                <span className=\"navbar-text\">\n                    <a href=\"/\">Sales Management System</a>\n                </span>\n                <ul className=\"navbar-nav ml-lg-auto\">\n                    <li className=\"nav-item\" title=\"Software Help\"><a href={ HELP } target=\"_blank\" className=\"navbar-nav-link font-weight-semibold\"><span className=\"text-pink-400\"><i className=\"icon-question7 font-16\"></i> Help</span></a></li>\n                </ul>\n            </div>\n        </div>\n        // <!-- /footer -->\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './header';\nimport PageHeader from './page_header';\nimport SideMenu from './side_menu';\nimport Footer from './footer';\n\nclass Container extends Component {\n    render() {\n        var loader = \"\";\n        if (this.props.showLoader) {\n            loader = <div className=\"loading-container-app\">\n                <span className=\"badge bg-warning-400 loading-content-app py-2 px-2 font-s-12\">Loading...</span>\n            </div>;\n        }\n        return (\n            <div className=\"virtual-body navbar-top-custom\">\n                {loader}\n                <Header />\n                <div className=\"page-content\">\n                    <SideMenu />\n                    {/* <!-- Main content --> */}\n                    <div className=\"content-wrapper m-top-3\">\n                        <PageHeader\n                            header={this.props.header}\n                            faIcon={this.props.faIcon}\n                        />\n                        {/* <!-- Content area --> */}\n                        <div className=\"content\">\n                            {this.props.children}\n                        </div>\n                        <Footer />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Container;\n\nContainer.defaultProps = {\n    showLoader: false\n}","import React, { useState } from \"react\";\nimport Container from \"../common/application_container\";\nimport axios from \"axios\";\nimport { CHANGE_PASSWORD } from \"../../config/rest_endpoints\";\nimport { byteCode } from \"../../assets/js/helper\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { stringify } from \"querystring\";\n\nfunction ChangePassword(props) {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n\n  function handleKeyPress(e) {\n    if (e.key === \"Enter\") {\n      onUpdatePassword();\n    }\n  }\n\n  function onUpdatePassword() {\n    debugger;\n    if (\n      oldPassword.trim() === \"\" ||\n      newPassword.trim() === \"\" ||\n      confirmPassword.trim() === \"\"\n    ) {\n      showResponseModal(\"All fields are required and cannot be empty.\");\n    } else if (newPassword.trim() != confirmPassword.trim()) {\n      showResponseModal(\n        \"New Password and Confirm New Password should contain same values\"\n      );\n    } else {\n      var data = {\n        old_password: byteCode.encode(oldPassword.trim()),\n        new_password: byteCode.encode(newPassword.trim())\n      };\n\n      axios.defaults.withCredentials = true;\n      var user = JSON.parse(sessionStorage.getItem(\"user\"));\n      axios({\n        method: \"post\",\n        url: CHANGE_PASSWORD,\n        data: stringify(data),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + user.jwt_token\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          if (res.data.success === true) {\n            resetForm();\n            showResponseModal(res.data.message);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        }\n      });\n    }\n  }\n\n  function resetForm() {\n    setNewPassword(\"\");\n    setConfirmPassword(\"\");\n    setOldPassword(\"\");\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  return (\n    <Container header=\"Change Password\">\n      {responseModalHtml}\n\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Current Password{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"OldPassword\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter Your Current Password\"\n                  value={oldPassword}\n                  onChange={event => setOldPassword(event.target.value)}\n                  onKeyPress={event => handleKeyPress(event)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"list-group-item list-group-divider mb-3\"></div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  New Password{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"NewPassword\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter New Password\"\n                  value={newPassword}\n                  onChange={event => setNewPassword(event.target.value)}\n                  onKeyPress={event => handleKeyPress(event)}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Confirm New Password{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"ConfirmPassword\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Confirm New Password\"\n                  value={confirmPassword}\n                  onChange={event => setConfirmPassword(event.target.value)}\n                  onKeyPress={event => handleKeyPress(event)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <Button\n            title=\"Update Password\"\n            className=\"btn btn-theme btn-labeled\"\n            onClick={() => onUpdatePassword()}\n            disabled={\n              oldPassword === \"\" || newPassword === \"\" || confirmPassword === \"\"\n            }\n          >\n            Update\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}\nexport default ChangePassword;\n","export function convertDate(inputFormat) {\n  function pad(s) {\n    return s < 10 ? \"0\" + s : s;\n  }\n  var d = new Date(inputFormat);\n  return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join(\"/\");\n}\n\nexport function range(start, end) {\n  return Array(end - start + 1)\n    .fill()\n    .map((_, idx) => start + idx);\n}\n\nexport function getFullName(employee) {\n  return employee.first_name + \" \" + employee.last_name;\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport OfflineTable from \"react-offline-table\";\nimport axios from \"axios\";\nimport {\n  GET_ALL_EMPLOYEES,\n  EMPLOYEE_TOTALS,\n  GENERATE_CASH_REPORT,\n  GENERATE_LEDGER_REPORT\n} from \"../../config/rest_endpoints\";\nimport { saveAs } from \"file-saver\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  UncontrolledTooltip\n} from \"reactstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { stringify } from \"querystring\";\nimport {\n  colors,\n  pages,\n  monthListWithAllMonthOption\n} from \"../../config/static_lists\";\nimport { range, getFullName, convertDate } from \"../helper\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DatePicker from \"react-datepicker\";\n\nfunction DashboardAdmin(props) {\n  useEffect(() => {\n    if (isAdmin) {\n      getAllEmployees();\n    }\n  }, []);\n\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  const isAdmin = user.role === \"admin\";\n\n  const currentDate = new Date();\n\n  const allEmployeeObj = { id: 0, first_name: \"All\", last_name: \"Employees\" };\n\n  // State\n  const [jobOrderList, setJobOrderList] = useState([]);\n  const [employeeList, setEmployeeList] = useState([]);\n  const [gettingData, setGettingData] = useState(false);\n  const [dropDownEmployeeOpen, setDropDownEmployeeOpen] = useState(false);\n  const [dropDownMonthOpen, setDropDownMonthOpen] = useState(false);\n  const [dropDownYearOpen, setDropDownYearOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(allEmployeeObj);\n  const [selectedMonth, setSelectedMonth] = useState(\n    monthListWithAllMonthOption[currentDate.getMonth() + 1]\n  );\n  const [selectedYear, setSelectedYear] = useState(currentDate.getFullYear());\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [reportType, setReportType] = useState(\"\");\n  const [reportDate, setReportDate] = useState(new Date());\n\n  // Function\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  function getFilteredData() {\n    const filterData = {\n      employee_id: selectedEmployee.id,\n      month: selectedMonth.id,\n      year: selectedYear\n    };\n\n    getAllJobOrder(filterData);\n  }\n\n  function selectYear(year) {\n    setSelectedYear(year);\n  }\n\n  function selectMonth(month) {\n    setSelectedMonth(month);\n  }\n\n  function selectEmployee(employee) {\n    setSelectedEmployee(employee);\n  }\n\n  const toggleEmployeeDropdown = () =>\n    setDropDownEmployeeOpen(prevState => !prevState);\n\n  const toggleMonthDropdown = () =>\n    setDropDownMonthOpen(prevState => !prevState);\n\n  const toggleYearDropdown = () => setDropDownYearOpen(prevState => !prevState);\n\n  function getAllJobOrder(filterData) {\n    setJobOrderList([]);\n    setGettingData(true);\n    axios({\n      method: \"post\",\n      url: EMPLOYEE_TOTALS,\n      data: stringify(filterData),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      setGettingData(false);\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          if (res.data.rows.length > 0) {\n            setJobOrderList(res.data.rows);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  function getAllEmployees() {\n    setGettingData(true);\n    axios({\n      method: \"get\",\n      url: GET_ALL_EMPLOYEES,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      setGettingData(false);\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setEmployeeList([allEmployeeObj, ...res.data.rows]);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  // Data\n  const headerFields = [\n    {\n      id: 0,\n      type: \"text\",\n      align: \"text-left\",\n      sort: \"sorting_asc\",\n      name: \"EMPLOYEE NAME\"\n    },\n    {\n      id: 1,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"TOTAL BILLED\"\n    },\n    {\n      id: 2,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"TOTAL RECEIVED\"\n    },\n    {\n      id: 3,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"TOTAL REMAINING\"\n    }\n  ];\n\n  const yearList = range(2015, currentDate.getFullYear());\n\n  var _data = [];\n\n  for (var i = 0; i < jobOrderList.length; i++) {\n    var row = [];\n\n    const currentJobOrder = jobOrderList[i];\n    // Column 1 Employee\n\n    row.push(currentJobOrder.employee_name);\n\n    // Column 2 Total Billed\n    var formatter = new Intl.NumberFormat(\"en-US\");\n\n    row.push(\n      String(formatter.format(currentJobOrder.total_billed_amount)) + \" AED\"\n    );\n\n    // Column 3 Total Received\n    row.push(\n      String(formatter.format(currentJobOrder.total_received_amount)) + \" AED\"\n    );\n\n    // Column 4 Total Remaining\n    row.push(\n      String(formatter.format(currentJobOrder.total_due_amount)) + \" AED\"\n    );\n\n    _data.push(row);\n  }\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  function getPrintReport() {\n    let convertedDate = convertDate(reportDate);\n\n    axios(`${GENERATE_CASH_REPORT}`, {\n      method: \"POST\",\n      responseType: \"blob\", //Force to receive data in a Blob Format\n      data: stringify({\n        date: convertedDate,\n        type: reportType\n      })\n    })\n      .then(response => {\n        if (response.success !== false) {\n          const file = new Blob([response.data], { type: \"application/pdf\" });\n          saveAs(\n            file,\n            `${reportType} Report generated on ${convertedDate}.pdf`\n          );\n        } else {\n          showResponseModal(response.message);\n        }\n      })\n      .catch(error => {\n        showResponseModal(error);\n      });\n  }\n\n  function getPrintLedgerReport() {\n    let convertedDate = convertDate(reportDate);\n\n    axios(`${GENERATE_LEDGER_REPORT}`, {\n      method: \"POST\",\n      responseType: \"blob\", //Force to receive data in a Blob Format\n      data: stringify({\n        date: convertedDate,\n        type: reportType\n      })\n    })\n      .then(response => {\n        if (response.success !== false) {\n          const file = new Blob([response.data], { type: \"application/pdf\" });\n          saveAs(\n            file,\n            `${reportType} Report generated on ${convertedDate}.pdf`\n          );\n        } else {\n          showResponseModal(response.message);\n        }\n      })\n      .catch(error => {\n        showResponseModal(error);\n      });\n  }\n\n  return (\n    <Fragment>\n      {responseModalHtml}\n\n      {user.role === \"admin\" ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">Print Reports</h4>\n            <div className=\"row justify-content-around\">\n              <div className=\"col-md-3\">\n                <div\n                  id=\"reportType\"\n                  className=\"m-1 w-100\"\n                  onChange={event => setReportType(event.target.value)}\n                >\n                  Report type:\n                  <input\n                    className=\"ml-3 m-1\"\n                    type=\"radio\"\n                    value=\"Daily\"\n                    name=\"reportType\"\n                    id=\"reportTypeDaily\"\n                  />{\" \"}\n                  Daily\n                  <UncontrolledTooltip\n                    placement=\"bottom\"\n                    target=\"reportTypeDaily\"\n                  >\n                    Daily Report\n                  </UncontrolledTooltip>\n                  <input\n                    className=\"ml-3 m-1\"\n                    type=\"radio\"\n                    value=\"Monthly\"\n                    name=\"reportType\"\n                    id=\"reportTypeMonthly\"\n                  />{\" \"}\n                  Monthly\n                  <UncontrolledTooltip\n                    placement=\"bottom\"\n                    target=\"reportTypeMonthly\"\n                  >\n                    Monthly Report\n                  </UncontrolledTooltip>\n                  <input\n                    className=\"ml-3 m-1\"\n                    type=\"radio\"\n                    value=\"Yearly\"\n                    name=\"reportType\"\n                    id=\"reportTypeYearly\"\n                  />{\" \"}\n                  Yearly\n                  <UncontrolledTooltip\n                    placement=\"bottom\"\n                    target=\"reportTypeYearly\"\n                  >\n                    Yearly Report\n                  </UncontrolledTooltip>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <DatePicker\n                  className=\"form-control\"\n                  id=\"reportDate\"\n                  dateFormat=\"MMMM d, yyyy\"\n                  selected={reportDate}\n                  onChange={date => {\n                    setReportDate(date);\n                  }}\n                  todayButton=\"Today\"\n                />\n                <UncontrolledTooltip placement=\"bottom\" target=\"reportDate\">\n                  Select report date.\n                </UncontrolledTooltip>\n              </div>\n              <div className=\"col-md-3\">\n                <Button\n                  id=\"printLedger\"\n                  className=\"btn btn-theme btn-labeled w-100\"\n                  onClick={() => getPrintReport()}\n                  disabled={reportType === \"\"}\n                >\n                  <FontAwesomeIcon icon={[\"fas\", \"print\"]} className=\"mr-2\" />\n                  Print Ledger\n                </Button>\n                <UncontrolledTooltip placement=\"bottom\" target=\"printLedger\">\n                  Print Ledger\n                </UncontrolledTooltip>\n              </div>\n              <div className=\"col-md-3\">\n                <Button\n                  id=\"printReportButton\"\n                  className=\"btn btn-theme btn-labeled w-100\"\n                  onClick={() => getPrintReport()}\n                  disabled={reportType === \"\"}\n                >\n                  <FontAwesomeIcon icon={[\"fas\", \"print\"]} className=\"mr-2\" />\n                  Print Cash Report\n                </Button>\n                <UncontrolledTooltip\n                  placement=\"bottom\"\n                  target=\"printReportButton\"\n                >\n                  Print selected report.\n                </UncontrolledTooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Employee Total</h4>\n          <div className=\"row justify-content-around\">\n            {isAdmin ? (\n              <div className=\"col-md-3\">\n                <Dropdown\n                  isOpen={dropDownEmployeeOpen}\n                  toggle={toggleEmployeeDropdown}\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled w-100 text-right\"\n                  >\n                    {getFullName(selectedEmployee)}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    className=\"w-100\"\n                  >\n                    {employeeList.map(employee => (\n                      <DropdownItem\n                        key={employee.id}\n                        onClick={() => {\n                          selectEmployee(employee);\n                        }}\n                      >\n                        {getFullName(employee)}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownMonthOpen} toggle={toggleMonthDropdown}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled w-100 text-right\"\n                >\n                  {selectedMonth.name}\n                </DropdownToggle>\n                <DropdownMenu\n                  style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                  className=\"w-100\"\n                >\n                  {monthListWithAllMonthOption.map(month => (\n                    <DropdownItem\n                      key={month.id}\n                      onClick={() => {\n                        selectMonth(month);\n                      }}\n                    >\n                      {month.name}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownYearOpen} toggle={toggleYearDropdown}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled w-100 text-right\"\n                >\n                  {selectedYear}\n                </DropdownToggle>\n                <DropdownMenu\n                  style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                  className=\"w-100\"\n                >\n                  {yearList.map(year => (\n                    <DropdownItem\n                      key={year}\n                      onClick={() => {\n                        selectYear(year);\n                      }}\n                    >\n                      {year}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-3\">\n              <Button\n                title=\"Filter Data\"\n                className=\"btn btn-theme btn-labeled w-100\"\n                onClick={() => getFilteredData()}\n              >\n                <FontAwesomeIcon icon={[\"fas\", \"filter\"]} className=\"mr-2\" />\n                Filter Data\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {_data.length > 0 ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <OfflineTable\n              headerFields={headerFields}\n              data={_data}\n              showSno={false}\n              enableFilter={true}\n              pages={pages}\n              colors={colors}\n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"h-100 row align-items-center\">\n          <div className=\"text-center col mb-5 pb-5\">\n            <BeatLoader color={\"#1861B8\"} size={20} loading={gettingData} />\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardAdmin));\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport OfflineTable from \"react-offline-table\";\nimport axios from \"axios\";\nimport {\n  GET_ALL_EMPLOYEES,\n  EMPLOYEE_TOTALS\n} from \"../../config/rest_endpoints\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { stringify } from \"querystring\";\nimport {\n  colors,\n  pages,\n  monthListWithAllMonthOption\n} from \"../../config/static_lists\";\nimport { range } from \"../helper\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nfunction DashboardEmployee(props) {\n  useEffect(() => {\n    if (isAdmin) {\n      getAllEmployees();\n    }\n  }, []);\n\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  const isAdmin = user.role === \"admin\";\n\n  const currentDate = new Date();\n\n  const allEmployeeObj = { id: 0, first_name: \"All\", last_name: \"Employees\" };\n\n  // State\n  const [jobOrderList, setJobOrderList] = useState([]);\n  const [employeeList, setEmployeeList] = useState([]);\n  const [gettingData, setGettingData] = useState(false);\n  const [dropDownEmployeeOpen, setDropDownEmployeeOpen] = useState(false);\n  const [dropDownMonthOpen, setDropDownMonthOpen] = useState(false);\n  const [dropDownYearOpen, setDropDownYearOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(allEmployeeObj);\n  const [selectedMonth, setSelectedMonth] = useState(\n    monthListWithAllMonthOption[currentDate.getMonth() + 1]\n  );\n  const [selectedYear, setSelectedYear] = useState(currentDate.getFullYear());\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n\n  // Function\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  function getFilteredData() {\n    const filterData = {\n      employee_id: selectedEmployee.id,\n      month: selectedMonth.id,\n      year: selectedYear\n    };\n\n    getAllJobOrder(filterData);\n  }\n\n  function getFullName(employee) {\n    return employee.first_name + \" \" + employee.last_name;\n  }\n\n  function selectYear(year) {\n    setSelectedYear(year);\n  }\n\n  function selectMonth(month) {\n    setSelectedMonth(month);\n  }\n\n  function selectEmployee(employee) {\n    setSelectedEmployee(employee);\n  }\n\n  const toggleEmployeeDropdown = () =>\n    setDropDownEmployeeOpen(prevState => !prevState);\n\n  const toggleMonthDropdown = () =>\n    setDropDownMonthOpen(prevState => !prevState);\n\n  const toggleYearDropdown = () => setDropDownYearOpen(prevState => !prevState);\n\n  function getAllJobOrder(filterData) {\n    setJobOrderList([]);\n    setGettingData(true);\n    axios({\n      method: \"post\",\n      url: EMPLOYEE_TOTALS,\n      data: stringify(filterData),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      setGettingData(false);\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          if (res.data.rows.length > 0) {\n            setJobOrderList(res.data.rows);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  function getAllEmployees() {\n    setGettingData(true);\n    axios({\n      method: \"get\",\n      url: GET_ALL_EMPLOYEES,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      setGettingData(false);\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setEmployeeList([allEmployeeObj, ...res.data.rows]);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  // Data\n  const headerFields = [\n    {\n      id: 0,\n      type: \"text\",\n      align: \"text-left\",\n      sort: \"sorting_asc\",\n      name: \"EMPLOYEE NAME\"\n    },\n    {\n      id: 1,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"TOTAL BILLED\"\n    },\n    {\n      id: 2,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"TOTAL RECEIVED\"\n    },\n    {\n      id: 3,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"TOTAL REMAINING\"\n    }\n  ];\n\n  const yearList = range(2015, currentDate.getFullYear());\n\n  var _data = [];\n\n  for (var i = 0; i < jobOrderList.length; i++) {\n    var row = [];\n\n    const currentJobOrder = jobOrderList[i];\n    // Column 1 Employee\n\n    row.push(currentJobOrder.employee_name);\n\n    // Column 2 Total Billed\n    var formatter = new Intl.NumberFormat(\"en-US\");\n\n    row.push(\n      String(formatter.format(currentJobOrder.total_billed_amount)) + \" AED\"\n    );\n\n    // Column 3 Total Received\n    row.push(\n      String(formatter.format(currentJobOrder.total_received_amount)) + \" AED\"\n    );\n\n    // Column 4 Total Remaining\n    row.push(\n      String(formatter.format(currentJobOrder.total_due_amount)) + \" AED\"\n    );\n\n    _data.push(row);\n  }\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  return (\n    <Fragment>\n      {responseModalHtml}\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row justify-content-between\">\n            {isAdmin ? (\n              <div className=\"col-md-3\">\n                <Dropdown\n                  isOpen={dropDownEmployeeOpen}\n                  toggle={toggleEmployeeDropdown}\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled w-100 text-right\"\n                  >\n                    {getFullName(selectedEmployee)}\n                  </DropdownToggle>\n                  <DropdownMenu style={{ overflow: \"auto\", maxHeight: \"20vh\" }}>\n                    {employeeList.map(employee => (\n                      <DropdownItem\n                        key={employee.id}\n                        onClick={() => {\n                          selectEmployee(employee);\n                        }}\n                      >\n                        {getFullName(employee)}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownMonthOpen} toggle={toggleMonthDropdown}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled w-100 text-right\"\n                >\n                  {selectedMonth.name}\n                </DropdownToggle>\n                <DropdownMenu style={{ overflow: \"auto\", maxHeight: \"20vh\" }}>\n                  {monthListWithAllMonthOption.map(month => (\n                    <DropdownItem\n                      key={month.id}\n                      onClick={() => {\n                        selectMonth(month);\n                      }}\n                    >\n                      {month.name}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownYearOpen} toggle={toggleYearDropdown}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled w-100 text-right\"\n                >\n                  {selectedYear}\n                </DropdownToggle>\n                <DropdownMenu style={{ overflow: \"auto\", maxHeight: \"20vh\" }}>\n                  {yearList.map(year => (\n                    <DropdownItem\n                      key={year}\n                      onClick={() => {\n                        selectYear(year);\n                      }}\n                    >\n                      {year}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-2\">\n              <Button\n                title=\"Filter Data\"\n                className=\"btn btn-theme btn-labeled\"\n                onClick={() => getFilteredData()}\n              >\n                Filter Data\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {_data.length > 0 ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <OfflineTable\n              headerFields={headerFields}\n              data={_data}\n              showSno={false}\n              enableFilter={true}\n              pages={pages}\n              colors={colors}\n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"h-100 row align-items-center\">\n          <div className=\"text-center col mb-5 pb-5\">\n            <BeatLoader color={\"#1861B8\"} size={20} loading={gettingData} />\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default withRouter(connect(mapStateToProps)(DashboardEmployee));\n","import React, { useEffect } from \"react\";\nimport Container from \"../common/application_container\";\nimport { connect } from \"react-redux\";\nimport DashboardAdmin from \"./dashboard_admin\";\nimport DashboardEmployee from \"./dashboard_employee\";\nimport { DASHBOARD_ADMIN } from \"../router/routeConstants\";\n\nfunction Dashboard(props) {\n  let user = JSON.parse(sessionStorage.getItem(\"user\"));\n  var Dashboard = \"\";\n\n  if (user.role === \"admin\") {\n    Dashboard = <DashboardAdmin />;\n  } else {\n    Dashboard = <DashboardEmployee activeUser={props.activeUser.user} />;\n  }\n\n  return <Container header=\"Dashboard\">{Dashboard}</Container>;\n}\n\nfunction mapStateToProps({ activeUser }) {\n  return { activeUser };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from 'react';\n\nimport Dashboard from './components/dashboard/dashboard';\n\nclass App extends Component {\n    render() {\n        return (\n            <Dashboard />\n        );\n    }\n\n}\n\nexport default App;","import React from 'react';\n\n\nexport function OrderProduct(props) {\n\n    var formatter = new Intl.NumberFormat('en-US');\n\n    return (\n        <div>\n            { props.orderProducts.map((product, index) => {\n\n                return <div key={ index } className=\"row\">\n                    <div className=\"col-md-2\">\n                        <label className=\"font-weight-semibold\">{ product.product_type_name }</label>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <label className=\"font-weight-semibold\">{ product.product_name }</label>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <label className=\"font-weight-semibold\">{ product.quantity }</label>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <label className=\"font-weight-semibold\">{ formatter.format(product.unit_price) } AED</label>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <label className=\"font-weight-semibold\">{ formatter.format(product.quantity * product.unit_price) } AED</label>\n                    </div>\n                </div>\n            }\n\n            ) }\n        </div>)\n\n\n}\n\nexport function OrderProductHeader(props) {\n\n    return (\n        <div className=\"row\">\n            { props.headers.map((header, index) =>\n\n                <div key={ index } className=\"col-md-2\">\n                    <label className=\"font-weight-bold\">{ header }</label>\n                </div>\n\n            ) }\n        </div>\n    )\n\n\n}\n","import Container from \"../common/application_container\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Card\n} from \"reactstrap\";\nimport CurrencyInput from \"react-currency-input\";\nimport {\n  PRODUCT_TYPES,\n  PRODUCTS_WITH_TYPE_ID,\n  NEW_ORDER,\n  GET_VAT,\n  GET_ALL_EMPLOYEES\n} from \"../../config/rest_endpoints\";\nimport { stringify } from \"querystring\";\nimport DatePicker from \"react-datepicker\";\nimport { addDays } from \"date-fns\";\nimport { OrderProductHeader, OrderProduct } from \"./orderProduct\";\nimport PhoneInput from \"react-phone-input-2\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { cashDisposalTypes } from \"../../config/static_lists\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { convertDate, getFullName } from \"../helper\";\n\nfunction NewOrder(props) {\n  var formatter = new Intl.NumberFormat(\"en-US\");\n  var user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  const defaultProduct = {\n    name: \"Select Design\"\n  };\n\n  const defaultProductType = {\n    name: \"Select Product Type\"\n  };\n\n  const [employeeList, setEmployeeList] = useState([]);\n  const [advancePayment, setAdvancePayment] = useState(0);\n  const [discount, setDiscount] = useState(0);\n  const [customerName, setCustomerName] = useState(\"\");\n  const [customerNumber, setCustomerNumber] = useState(\"\");\n  const [deliveryDate, setDeliveryDate] = useState(addDays(new Date(), 5));\n  const [dropdownProductOpen, setDropdownProductOpen] = useState(false);\n  const [dropdownProductTypeOpen, setDropdownProductTypeOpen] = useState(false);\n  const [dropdownCashDisposal, setDropdownCashDisposal] = useState(false);\n  const [dropDownEmployee, setDropDownEmployee] = useState(false);\n  const [orderDate, setOrderDate] = useState(new Date());\n  const [orderProducts, setOrderProducts] = useState([]);\n  const [productDisabled, setProductDisabled] = useState(true);\n  const [productList, setProductList] = useState([]);\n  const [productTypeList, setProductTypeList] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  const [selectedProduct, setSelectedProduct] = useState(defaultProduct);\n  const [selectedProductType, setSelectedProductType] = useState(\n    defaultProductType\n  );\n  const [selectedCashDisposal, setSelectedCashDisposal] = useState(\"Disposal\");\n  const [unitPrice, setUnitPrice] = useState(0);\n  const [openModal, setOpenModal] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n\n  const [customerTRN, setCustomerTRN] = useState(\"\");\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [employeeSelected, setEmployeeSelected] = useState({\n    first_name: \"Select\",\n    last_name: \"Employee\"\n  });\n  const [vat, setVAT] = useState(2);\n  const [remarks, setRemarks] = useState(\"\");\n  const [productDescription, setProductDescription] = useState(\"\");\n  const [chequeNumber, setChequeNumber] = useState(\"\");\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  function toggleModal() {\n    setOpenModal(!openModal);\n  }\n\n  function getAllEmployees() {\n    axios({\n      method: \"get\",\n      url: GET_ALL_EMPLOYEES,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setEmployeeList(res.data.rows);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    getProductTypes();\n    getVAT();\n    if (user.role === \"admin\") {\n      getAllEmployees();\n    }\n  }, []);\n\n  function getVAT() {\n    axios({\n      method: \"get\",\n      url: GET_VAT,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setVAT(res.data.vat);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function getProductTypes() {\n    if (productTypeList.length === 0) {\n      var user = JSON.parse(sessionStorage.getItem(\"user\"));\n      axios.defaults.withCredentials = true;\n      var yourConfig = {\n        headers: {\n          Authorization: \"Bearer \" + user.jwt_token\n        }\n      };\n\n      axios.get(PRODUCT_TYPES, yourConfig).then(res => {\n        if (res.status === 200) {\n          if (res.data.success === true) {\n            setProductTypeList(res.data.rows);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        } else {\n          console.log(\"Network Error\");\n        }\n      });\n    }\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  function getProducts(type) {\n    setProductDisabled(true);\n\n    if (type.name !== \"Other\") {\n      var user = JSON.parse(sessionStorage.getItem(\"user\"));\n      axios.defaults.withCredentials = true;\n\n      axios({\n        method: \"post\",\n        url: PRODUCTS_WITH_TYPE_ID,\n        data: stringify({ id: type.id }),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${user.jwt_token}`\n        },\n        withCredentials: true\n      }).then(res => {\n        if (res.status === 200) {\n          if (res.data.success === true) {\n            setProductList(res.data.rows);\n            setProductDisabled(false);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        } else {\n          console.log(\"Network Error\");\n        }\n      });\n    }\n  }\n\n  function selectProductType(selectedProductType) {\n    setSelectedProductType(selectedProductType);\n    getProducts(selectedProductType);\n    setSelectedProduct(defaultProduct);\n  }\n\n  function addProduct() {\n    if (selectedProductType.name !== defaultProductType.name) {\n      setOrderProducts([]);\n\n      var newProduct = {\n        // product_type_id: selectedProductType.id,\n        product_type_name: selectedProductType.name,\n        product_name_id: selectedProduct.id,\n        product_name:\n          selectedProduct.name === defaultProduct.name\n            ? \"Other\"\n            : selectedProduct.name,\n        quantity: parseInt(quantity),\n        unit_price: unitPrice,\n        description: productDescription\n      };\n      var products = orderProducts;\n      if (products.length > 0) {\n        products.unshift(newProduct);\n      } else {\n        products = [newProduct];\n      }\n      setOrderProducts(products);\n\n      setSelectedProduct(defaultProduct);\n      setSelectedProductType(defaultProductType);\n      setQuantity(1);\n      setUnitPrice(0);\n      setProductDescription(\"\");\n    }\n  }\n\n  const toggleProductType = () =>\n    setDropdownProductTypeOpen(prevState => !prevState);\n\n  const toggleCashDisposal = () =>\n    setDropdownCashDisposal(prevState => !prevState);\n\n  const toggleProduct = () => setDropdownProductOpen(prevState => !prevState);\n\n  const toggleDropDownEmployee = () =>\n    setDropDownEmployee(prevState => !prevState);\n\n  var orderProductsHTML = (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <OrderProductHeader\n          headers={[\"Type\", \"Name\", \"Quantity\", \"Unit Price\", \"Sub Total\"]}\n        />\n\n        <OrderProduct orderProducts={orderProducts} />\n      </div>\n    </div>\n  );\n\n  var balanceAmount = 0;\n  const costReducer = (accumulator, currentValue) =>\n    accumulator + currentValue.quantity * currentValue.unit_price;\n  if (orderProducts.length > 0) {\n    balanceAmount = orderProducts.reduce(costReducer, 0);\n  }\n\n  var tax = (vat * balanceAmount) / 100;\n\n  function onAdvancePaymentChange(event, value, maskedValue) {\n    if (maskedValue > tax + balanceAmount) {\n      setAdvancePayment(tax + balanceAmount);\n    } else {\n      setAdvancePayment(maskedValue);\n    }\n  }\n\n  function onDiscountChange(event, value, maskedValue) {\n    setDiscount(maskedValue);\n  }\n\n  function resetForm() {\n    setAdvancePayment(0);\n    setCustomerName(\"\");\n    setCustomerNumber(\"\");\n    setDeliveryDate(addDays(new Date(), 5));\n    setDropdownProductOpen(false);\n    setDropdownProductTypeOpen(false);\n    setOrderDate(new Date());\n    setOrderProducts([]);\n    setProductDisabled(true);\n    setProductList([]);\n    setQuantity(1);\n    setSelectedProduct(defaultProduct);\n    setSelectedProductType(defaultProductType);\n    setUnitPrice(0);\n    setCustomerTRN(\"\");\n    setRemarks(\"\");\n    setDiscount(0);\n    setProductDescription(\"\");\n    setChequeNumber(\"\");\n  }\n\n  var modalHtml = (\n    <Modal\n      isOpen={openModal}\n      toggle={toggleModal}\n      // className={ }\n    >\n      <ModalHeader toggle={toggleModal}>Order Confirmation</ModalHeader>\n      <ModalBody>\n        {orderSuccess\n          ? \"Order successfully added.\"\n          : \"Unable to process order.\"}{\" \"}\n      </ModalBody>\n    </Modal>\n  );\n\n  function placeOrder() {\n    if (\n      customerName !== \"\" &&\n      customerNumber !== \"\" &&\n      orderProducts.length !== 0\n    ) {\n      var newOrderData = {\n        customer_phone_number: customerNumber,\n        customer_name: customerName,\n        placement_date: convertDate(orderDate),\n        delivery_date: convertDate(deliveryDate),\n        advance_payment: advancePayment,\n        products: JSON.stringify(orderProducts),\n        customer_trn: customerTRN,\n        remarks: remarks,\n        cash_disposal: selectedCashDisposal,\n        employee_id: employeeSelected.id,\n        discount: discount,\n        cheque: chequeNumber\n      };\n      var user = JSON.parse(sessionStorage.getItem(\"user\"));\n      axios.defaults.withCredentials = true;\n\n      axios({\n        method: \"post\",\n        url: NEW_ORDER,\n        data: stringify(newOrderData),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + user.jwt_token\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          if (res.data.success === true) {\n            setOrderSuccess(true);\n            resetForm();\n          } else {\n            setOrderSuccess(false);\n            console.log(res.data.message);\n          }\n          setOpenModal(true);\n        }\n      });\n    }\n  }\n\n  return (\n    <Container header=\"New Job Order Form\">\n      {modalHtml}\n      {responseModalHtml}\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              {user.role === \"admin\" ? (\n                <div className=\"row justify-content-start\">\n                  <div className=\"col-md-2\">\n                    <label className=\"font-weight-semibold\">\n                      Order By{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <Dropdown\n                      isOpen={dropDownEmployee}\n                      toggle={toggleDropDownEmployee}\n                    >\n                      <DropdownToggle\n                        caret\n                        className=\"btn btn-theme btn-labeled text-right w-100\"\n                      >\n                        {getFullName(employeeSelected)}\n                      </DropdownToggle>\n                      <DropdownMenu\n                        style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                        className=\"w-100\"\n                      >\n                        {employeeList.map((employee, index) => (\n                          <DropdownItem\n                            key={index}\n                            onClick={() => setEmployeeSelected(employee)}\n                          >\n                            {getFullName(employee)}\n                          </DropdownItem>\n                        ))}\n                      </DropdownMenu>\n                    </Dropdown>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              <h4 className=\"card-title\">Customer</h4>\n\n              <div className=\"row justify-content-around\">\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Name{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n                    <input\n                      name=\"CustomerName\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter Customer Name\"\n                      value={customerName}\n                      onChange={event => setCustomerName(event.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Phone Number{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n                    <PhoneInput\n                      className=\"form-control\"\n                      name=\"CustomerPhoneNumber\"\n                      placeholder=\"971 00 000 0000\"\n                      value={customerNumber}\n                      onChange={phone => setCustomerNumber(phone)}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row justify-content-around\">\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-semibold\">\n                    Order Date{\" \"}\n                    <span className=\"c-failed\" title=\"Required\">\n                      *\n                    </span>\n                  </label>\n                  <DatePicker\n                    className=\"form-control\"\n                    dateFormat=\"MMMM d, yyyy\"\n                    selected={orderDate}\n                    onChange={date => setOrderDate(date)}\n                    todayButton=\"Today\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Delivery Date{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n                    <DatePicker\n                      className=\"form-control\"\n                      dateFormat=\"MMMM d, yyyy\"\n                      selected={deliveryDate}\n                      onChange={date => setDeliveryDate(date)}\n                      todayButton=\"Today\"\n                      minDate={orderDate}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row justify-content-around\">\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Customer TRN{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n                    <input\n                      name=\"CustomerTRN\"\n                      type=\"number\"\n                      className=\"form-control\"\n                      placeholder=\"Enter Customer TRN\"\n                      value={customerTRN}\n                      onChange={event => setCustomerTRN(event.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <h4 className=\"card-title\">Order Details</h4>\n\n              <div className=\"row justify-content-around\">\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Product Type{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n\n                    <Dropdown\n                      isOpen={dropdownProductTypeOpen}\n                      toggle={toggleProductType}\n                    >\n                      <DropdownToggle\n                        caret\n                        className=\"btn btn-theme btn-labeled\"\n                      >\n                        {selectedProductType.name}\n                      </DropdownToggle>\n                      <DropdownMenu\n                        style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                      >\n                        {productTypeList.map(type => (\n                          <DropdownItem\n                            key={type.id}\n                            onClick={() => selectProductType(type)}\n                          >\n                            {type.name}\n                          </DropdownItem>\n                        ))}\n                      </DropdownMenu>\n                    </Dropdown>\n                  </div>\n                </div>\n\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Design{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n\n                    <Dropdown\n                      isOpen={dropdownProductOpen}\n                      toggle={toggleProduct}\n                    >\n                      <DropdownToggle\n                        caret\n                        className=\"btn-theme btn-labeled\"\n                        disabled={productDisabled}\n                      >\n                        {selectedProduct.name}\n                      </DropdownToggle>\n                      <DropdownMenu\n                        style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                      >\n                        {productList.map(product => (\n                          <DropdownItem\n                            key={product.id}\n                            onClick={() => setSelectedProduct(product)}\n                          >\n                            {product.name}\n                          </DropdownItem>\n                        ))}\n                      </DropdownMenu>\n                    </Dropdown>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row justify-content-around\">\n                <div className=\"col-md-4\">\n                  <textarea\n                    name=\"Product Description\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Product Description\"\n                    value={productDescription}\n                    onChange={event =>\n                      setProductDescription(event.target.value)\n                    }\n                    maxlength={250}\n                    rows=\"2\"\n                  />\n                </div>\n              </div>\n              <div className=\"row justify-content-around\">\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Quantity{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n\n                    <input\n                      type=\"Number\"\n                      className=\"form-control\"\n                      min={1}\n                      value={quantity}\n                      onChange={event => setQuantity(event.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group\">\n                    <label className=\"font-weight-semibold\">\n                      Price{\" \"}\n                      <span className=\"c-failed\" title=\"Required\">\n                        *\n                      </span>\n                    </label>\n\n                    <CurrencyInput\n                      className=\"form-control\"\n                      suffix=\" AED\"\n                      precision=\"0\"\n                      value={unitPrice}\n                      onChangeEvent={(event, value, maskedValue) =>\n                        setUnitPrice(maskedValue)\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row justify-content-end\">\n                <div className=\"col-md-2\">\n                  <Button\n                    title=\"Add Product\"\n                    className=\"btn btn-theme btn-labeled\"\n                    onClick={() => addProduct()}\n                  >\n                    Add Product\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {orderProducts.length > 0 ? orderProductsHTML : \"\"}\n        </div>\n\n        <div className=\"col-md-4\">\n          <Card style={{ height: \"100vh\" }}>\n            <div className=\"card-body order-total-padding\">\n              <h4 className=\"card-title\" style={{ marginBottom: \"40px\" }}>\n                Order Summary\n              </h4>\n\n              <div\n                className=\"row justify-content-between\"\n                style={{ marginBottom: \"10px\" }}\n              >\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-semibold\">Amount: </label>\n                </div>\n                <div className=\"col-md-4 text-right\">\n                  <label className=\"font-weight-semibold\">\n                    {formatter.format(balanceAmount)} AED\n                  </label>\n                </div>\n              </div>\n\n              <div\n                className=\"row justify-content-between\"\n                style={{ marginBottom: \"10px\" }}\n              >\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-semibold\">\n                    Tax ({vat} %):{\" \"}\n                  </label>\n                </div>\n                <div className=\"col-md-4 text-right\">\n                  <label className=\"font-weight-semibold\">\n                    {formatter.format(tax)} AED\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"row justify-content-between\">\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-semibold\">Total Bill: </label>\n                </div>\n                <div className=\"col-md-4 text-right\">\n                  <label className=\"font-weight-semibold\">\n                    {formatter.format(balanceAmount + tax)} AED\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-semibold\">Discount: </label>\n                </div>\n\n                <div className=\"col-md-3 text-right\">\n                  <CurrencyInput\n                    className=\"form-control\"\n                    precision=\"0\"\n                    value={discount}\n                    onChangeEvent={(event, value, maskedValue) =>\n                      onDiscountChange(event, value, maskedValue)\n                    }\n                  />\n                </div>\n              </div>\n\n              <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-semibold\">\n                    Advance Payment:{\" \"}\n                  </label>\n                </div>\n\n                <div className=\"col-md-3 text-right\">\n                  <CurrencyInput\n                    className=\"form-control\"\n                    precision=\"0\"\n                    value={advancePayment}\n                    onChangeEvent={(event, value, maskedValue) =>\n                      onAdvancePaymentChange(event, value, maskedValue)\n                    }\n                  />\n                </div>\n              </div>\n\n              <div className=\"row justify-content-between align-items-center\">\n                <div className=\"col-md-4\">\n                  <Dropdown\n                    isOpen={dropdownCashDisposal}\n                    toggle={toggleCashDisposal}\n                  >\n                    <DropdownToggle\n                      caret\n                      className=\"btn btn-theme btn-labeled\"\n                      disabled={advancePayment === 0}\n                    >\n                      {selectedCashDisposal}\n                    </DropdownToggle>\n                    <DropdownMenu\n                      style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    >\n                      {cashDisposalTypes.map((type, index) => (\n                        <DropdownItem\n                          key={index}\n                          onClick={() => setSelectedCashDisposal(type)}\n                        >\n                          {type}\n                        </DropdownItem>\n                      ))}\n                    </DropdownMenu>\n                  </Dropdown>\n                </div>\n                <div className=\"col-md-6 text-right\">\n                  <input\n                    disabled={selectedCashDisposal !== \"Bank\"}\n                    name=\"Cheque\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Cheque Number\"\n                    value={chequeNumber}\n                    onChange={event => setChequeNumber(event.target.value)}\n                  />\n                </div>\n              </div>\n\n              <hr\n                style={{\n                  marginTop: \"20px\",\n                  marginBottom: \"20px\",\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\"\n                }}\n              />\n\n              <div className=\"row justify-content-between\">\n                <div className=\"col-md-4\">\n                  <label className=\"font-weight-black font-s-15\">\n                    Remaining Bill:{\" \"}\n                  </label>\n                </div>\n                <div className=\"col-md-4 text-right\">\n                  <label className=\"font-weight-black font-s-15\">\n                    {formatter.format(\n                      balanceAmount + tax - advancePayment - discount\n                    )}{\" \"}\n                    AED\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"row justify-content-between\">\n                <div className=\"col-md-12 text-right\">\n                  <textarea\n                    name=\"Remarks\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Remarks\"\n                    value={remarks}\n                    onChange={event => setRemarks(event.target.value)}\n                    maxlength={250}\n                    rows=\"5\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <Button\n                    title=\"Confirm Order\"\n                    className=\"btn btn-theme btn-labeled\"\n                    size=\"lg\"\n                    block\n                    style={{ marginTop: \"50px\", marginBottom: \"40px\" }}\n                    onClick={() => placeOrder()}\n                    disabled={\n                      orderProducts.length === 0 ||\n                      customerName === \"\" ||\n                      customerNumber === \"\" ||\n                      customerTRN === \"\" ||\n                      selectedCashDisposal === \"Disposal\"\n                    }\n                  >\n                    <FontAwesomeIcon\n                      icon={[\"far\", \"check-circle\"]}\n                      className=\"mr-2\"\n                    />\n                    Confirm Order\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default NewOrder;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../common/application_container\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport OfflineTable from \"react-offline-table\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport {\n  ALL_ORDERS,\n  UPDATE_DELIVERY_DATE,\n  GET_ALL_EMPLOYEES,\n  ADD_ORDER_PAYMENT\n} from \"../../config/rest_endpoints\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { stringify } from \"querystring\";\nimport { convertDate } from \"../helper\";\nimport {\n  colors,\n  pages,\n  monthListWithAllMonthOption\n} from \"../../config/static_lists\";\nimport { range } from \"../helper\";\nimport CurrencyInput from \"react-currency-input\";\nimport { ORDER } from \"../router/routeConstants\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { getFullName } from \"../helper\";\nimport { cashDisposalTypes } from \"../../config/static_lists\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction AllOrders(props) {\n  useEffect(() => {\n    if (isAdmin) {\n      getAllEmployees();\n    }\n  }, []);\n\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  const isAdmin = user.role === \"admin\";\n\n  const currentDate = new Date();\n\n  const allEmployeeObj = { id: 0, first_name: \"All\", last_name: \"Employees\" };\n\n  // State\n  const [orderList, setOrderList] = useState([]);\n  const [employeeList, setEmployeeList] = useState([]);\n  const [gettingData, setGettingData] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [deliveryDate, setDeliveryDate] = useState(\"\");\n  const [orderDate, setOrderDate] = useState(\"\");\n  const [dateUpdated, setDateUpdated] = useState(false);\n  const [orderId, setOrderId] = useState(\"\");\n  const [dropDownEmployeeOpen, setDropDownEmployeeOpen] = useState(false);\n  const [dropDownMonthOpen, setDropDownMonthOpen] = useState(false);\n  const [dropDownYearOpen, setDropDownYearOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(allEmployeeObj);\n  const [selectedMonth, setSelectedMonth] = useState(\n    monthListWithAllMonthOption[currentDate.getMonth() + 1]\n  );\n  const [selectedYear, setSelectedYear] = useState(currentDate.getFullYear());\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [receivedPaymentAmount, setReceivedPaymentAmount] = useState(0);\n  const [paymentModalOpen, setPaymentModalOpen] = useState(false);\n  const [dropdownCashDisposal, setDropdownCashDisposal] = useState(false);\n  const [selectedCashDisposal, setSelectedCashDisposal] = useState(\"Disposal\");\n  const [chequeNumber, setChequeNumber] = useState(\"\");\n\n  // Function\n  const toggleCashDisposal = () =>\n    setDropdownCashDisposal(prevState => !prevState);\n\n  function receivePayment() {\n    const data = {\n      order_id: orderId,\n      paid_amount: receivedPaymentAmount,\n      disposal: selectedCashDisposal,\n      cheque: chequeNumber\n    };\n\n    axios({\n      method: \"post\",\n      url: ADD_ORDER_PAYMENT,\n      data: stringify(data),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setPaymentModalOpen(false);\n          getFilteredData();\n        }\n        showResponseModal(res.data.message);\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  function getFilteredData() {\n    const filterData = {\n      employee_id: selectedEmployee.id,\n      month: selectedMonth.id,\n      year: selectedYear\n    };\n\n    getAllOrder(filterData);\n  }\n\n  function selectYear(year) {\n    setSelectedYear(year);\n  }\n\n  function selectMonth(month) {\n    setSelectedMonth(month);\n  }\n\n  function selectEmployee(employee) {\n    setSelectedEmployee(employee);\n  }\n\n  const toggleEmployeeDropdown = () =>\n    setDropDownEmployeeOpen(prevState => !prevState);\n\n  const toggleMonthDropdown = () =>\n    setDropDownMonthOpen(prevState => !prevState);\n\n  const toggleYearDropdown = () => setDropDownYearOpen(prevState => !prevState);\n\n  function getAllOrder(filterData) {\n    setOrderList([]);\n    setGettingData(true);\n    axios({\n      method: \"post\",\n      url: ALL_ORDERS,\n      data: stringify(filterData),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      setGettingData(false);\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          if (res.data.rows.length > 0) {\n            setOrderList(res.data.rows);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function updateOrder() {\n    axios({\n      method: \"post\",\n      url: UPDATE_DELIVERY_DATE,\n      data: stringify({\n        order_id: orderId,\n        newDate: convertDate(deliveryDate)\n      }),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setOpenModal(false);\n          setOrderList([]);\n          setDateUpdated(false);\n          setDeliveryDate(\"\");\n          setOrderDate(\"\");\n\n          getAllOrder();\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function togglePaymentModal() {\n    setPaymentModalOpen(!paymentModalOpen);\n  }\n\n  function toggleModal() {\n    setOpenModal(!openModal);\n  }\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  function openEditOrderModal(order) {\n    setOrderDate(new Date(order.placement_date));\n    setDeliveryDate(new Date(order.delivery_date));\n    setOrderId(order.id);\n\n    setOpenModal(true);\n  }\n\n  function openReceivePaymentModal(order) {\n    setOrderId(order.id);\n\n    setPaymentModalOpen(true);\n  }\n\n  function getAllEmployees() {\n    setGettingData(true);\n    axios({\n      method: \"get\",\n      url: GET_ALL_EMPLOYEES,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      setGettingData(false);\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setEmployeeList([allEmployeeObj, ...res.data.rows]);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  // Data\n  const headerFields = [\n    {\n      id: 0,\n      type: \"action\",\n      sort: \"sorting_asc\",\n      align: \"text-left\",\n      name: \"ACTIONS\"\n    },\n    {\n      id: 2,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"ORDER#\"\n    },\n    {\n      id: 1,\n      type: \"text\",\n      align: \"text-left\",\n      name: \"TOTAL AMOUNT\"\n    },\n    {\n      id: 3,\n      type: \"media\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"EMPLOYEE\"\n    },\n    {\n      id: 4,\n      type: \"media\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"CUSTOMER\"\n    },\n    {\n      id: 5,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"ORDER DATE\"\n    },\n    {\n      id: 6,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"DELIVERY DATE\"\n    },\n    {\n      id: 7,\n      type: \"text\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"REMAINING AMOUNT\"\n    },\n    {\n      id: 8,\n      type: \"badge\",\n      sort: \"sorting\",\n      align: \"text-left\",\n      name: \"STATUS\"\n    }\n  ];\n\n  const yearList = range(2015, currentDate.getFullYear());\n\n  var _data = [];\n\n  for (var i = 0; i < orderList.length; i++) {\n    var row = [];\n\n    const currentOrder = orderList[i];\n    var formatter = new Intl.NumberFormat(\"en-US\");\n\n    // Column ACTIONS\n    const actions = [];\n\n    if (orderList[i].order_status !== \"Cancelled\") {\n      actions.push({\n        icon: [\"far\", \"edit\"],\n        className: \"text-info-600 cursor-pointer h3\",\n        callBack: () => openEditOrderModal(currentOrder)\n      });\n    }\n\n    if (orderList[i].order_status === \"Incomplete\") {\n      actions.push({\n        icon: [\"fas\", \"hand-holding-usd\"],\n        className: \"text-info-600 cursor-pointer h3 ml-2\",\n        callBack: () => openReceivePaymentModal(currentOrder)\n      });\n    }\n    actions.push({\n      icon: [\"fas\", \"info-circle\"],\n      className: \"text-info-600 cursor-pointer h3 ml-2\",\n      callBack: () => {\n        setOrderId(currentOrder.id);\n        props.history.push({\n          pathname: `${ORDER}`,\n          state: { orderId: currentOrder.id }\n        });\n      }\n    });\n    row.push(actions);\n\n    // Column ORDER#\n    row.push(orderList[i].id ? orderList[i].id : \"N/A\");\n\n    // Column TOTAL PAYMENT\n    row.push(String(formatter.format(currentOrder.billed_amount) + \" AED\"));\n\n    // Column EMPLOYEE\n    const employeeAvatar = {\n      topText: String(orderList[i].first_name + \" \" + orderList[i].last_name),\n      bottomText: String(orderList[i].employee_id),\n      picture: null\n    };\n    row.push(employeeAvatar);\n\n    // Column CUSTOMER\n    const customerAvatar = {\n      topText: String(orderList[i].customer_name),\n      bottomText: String(orderList[i].customer_phone_number),\n      picture: null\n    };\n    row.push(customerAvatar);\n\n    // Column ORDER DATE\n    row.push(\n      orderList[i].placement_date === \"\" || orderList[i].placement_date === null\n        ? \"N/A\"\n        : moment(orderList[i].placement_date).format(\"DD-MM-YYYY\")\n    );\n\n    // Column DELIVERY DATE\n    row.push(\n      orderList[i].delivery_date === \"\" || orderList[i].delivery_date === null\n        ? \"N/A\"\n        : moment(orderList[i].delivery_date).format(\"DD-MM-YYYY\")\n    );\n\n    // Column DUE PAYMENT\n    row.push(String(formatter.format(orderList[i].due_amount) + \" AED\"));\n\n    // Column STATUS BADGE\n    if (orderList[i].order_status === \"Incomplete\") {\n      row.push({\n        class: \"badge badge-info text-capitalize\",\n        data: \"Incomplete\"\n      });\n    } else if (orderList[i].order_status === \"Complete\") {\n      row.push({\n        class: \"badge badge-success text-capitalize\",\n        data: \"Complete\"\n      });\n    } else if (orderList[i].order_status === \"Cancelled\") {\n      row.push({\n        class: \"badge badge-danger text-capitalize\",\n        data: \"Cancelled\"\n      });\n    }\n    row.push();\n\n    _data.push(row);\n  }\n  var editOrderModalHtml = (\n    <Modal isOpen={openModal} toggle={toggleModal}>\n      <ModalHeader toggle={toggleModal}>Change Delivery Date</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label className=\"font-weight-semibold\">\n            Delivery Date{\" \"}\n            <span className=\"c-failed\" title=\"Required\">\n              *\n            </span>\n          </label>\n\n          <DatePicker\n            className=\"form-control\"\n            dateFormat=\"MMMM d, yyyy\"\n            selected={deliveryDate}\n            onChange={date => {\n              setDeliveryDate(date);\n              setDateUpdated(true);\n            }}\n            todayButton=\"Today\"\n            minDate={orderDate}\n          />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          title=\"Update\"\n          className=\"btn btn-theme btn-labeled\"\n          onClick={() => updateOrder()}\n          disabled={!dateUpdated}\n        >\n          Update\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  var receivePaymentModal = (\n    <Modal isOpen={paymentModalOpen} toggle={togglePaymentModal}>\n      <ModalHeader toggle={togglePaymentModal}>\n        Receive payment for order\n      </ModalHeader>\n      <ModalBody>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"form-group\">\n              <label className=\"font-weight-semibold\">\n                New Payment{\" \"}\n                <span className=\"c-failed\" title=\"Required\">\n                  *\n                </span>\n              </label>\n\n              <CurrencyInput\n                className=\"form-control\"\n                suffix=\" AED\"\n                precision=\"0\"\n                value={receivedPaymentAmount}\n                onChangeEvent={(event, value, maskedValue) =>\n                  setReceivedPaymentAmount(maskedValue)\n                }\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"form-group\">\n              <Dropdown\n                isOpen={dropdownCashDisposal}\n                toggle={toggleCashDisposal}\n              >\n                <DropdownToggle caret className=\"btn btn-theme btn-labeled\">\n                  {selectedCashDisposal}\n                </DropdownToggle>\n                <DropdownMenu style={{ overflow: \"auto\", maxHeight: \"20vh\" }}>\n                  {cashDisposalTypes.map((type, index) => (\n                    <DropdownItem\n                      key={index}\n                      onClick={() => setSelectedCashDisposal(type)}\n                    >\n                      {type}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n          </div>\n          <div className=\"col-md-6 text-right\">\n            <input\n              disabled={selectedCashDisposal !== \"Bank\"}\n              name=\"Cheque\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Cheque Number\"\n              value={chequeNumber}\n              onChange={event => setChequeNumber(event.target.value)}\n            />\n          </div>\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          title=\"Update\"\n          className=\"btn btn-theme btn-labeled\"\n          onClick={() => receivePayment()}\n          disabled={receivedPaymentAmount === 0}\n        >\n          Update\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n\n  return (\n    <Container header=\"All Orders\">\n      {editOrderModalHtml}\n      {responseModalHtml}\n      {receivePaymentModal}\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row justify-content-between\">\n            {isAdmin ? (\n              <div className=\"col-md-3\">\n                <Dropdown\n                  isOpen={dropDownEmployeeOpen}\n                  toggle={toggleEmployeeDropdown}\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled w-100 text-right\"\n                  >\n                    {getFullName(selectedEmployee)}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    right\n                  >\n                    {employeeList.map(employee => (\n                      <DropdownItem\n                        key={employee.id}\n                        onClick={() => {\n                          selectEmployee(employee);\n                        }}\n                      >\n                        {getFullName(employee)}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownMonthOpen} toggle={toggleMonthDropdown}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled w-100 text-right\"\n                >\n                  {selectedMonth.name}\n                </DropdownToggle>\n                <DropdownMenu\n                  style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                  right\n                >\n                  {monthListWithAllMonthOption.map(month => (\n                    <DropdownItem\n                      key={month.id}\n                      onClick={() => {\n                        selectMonth(month);\n                      }}\n                    >\n                      {month.name}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownYearOpen} toggle={toggleYearDropdown}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled w-100 text-right\"\n                >\n                  {selectedYear}\n                </DropdownToggle>\n                <DropdownMenu\n                  style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                  right\n                >\n                  {yearList.map(year => (\n                    <DropdownItem\n                      key={year}\n                      onClick={() => {\n                        selectYear(year);\n                      }}\n                    >\n                      {year}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-3\">\n              <Button\n                title=\"Filter Data\"\n                className=\"btn btn-theme btn-labeled w-100\"\n                onClick={() => getFilteredData()}\n              >\n                <FontAwesomeIcon icon={[\"fas\", \"filter\"]} className=\"mr-2\" />\n                Filter Data\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {_data.length > 0 ? (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <OfflineTable\n              headerFields={headerFields}\n              data={_data}\n              showSno={false}\n              enableFilter={true}\n              pages={pages}\n              colors={colors}\n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"h-100 row align-items-center\">\n          <div className=\"text-center col mb-5 pb-5\">\n            <BeatLoader color={\"#1861B8\"} size={20} loading={gettingData} />\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\nexport default AllOrders;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../common/application_container\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Card,\n  UncontrolledTooltip\n} from \"reactstrap\";\nimport { ADD_NEW_EMPLOYEE } from \"../../config/rest_endpoints\";\nimport axios from \"axios\";\nimport { stringify } from \"querystring\";\nimport { byteCode } from \"../../assets/js/helper\";\n\nfunction AddEmployee(props) {\n  const [openModalFN, setOpenModalFN] = useState(false);\n  const [openModalUN, setOpenModalUN] = useState(false);\n  const [openModalResponse, setOpenModalResponse] = useState(false);\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [selectedRole, setSelectedRole] = useState(\"Employee\");\n  const [dropDownRoleOpen, setDropDownRoleOpen] = useState(false);\n  const [responseText, setResponseText] = useState(\"\");\n\n  var modalHtmlFN = (\n    <Modal isOpen={openModalFN} toggle={toggleModalFN}>\n      <ModalHeader toggle={toggleModalFN}>\n        Employee first name invalid\n      </ModalHeader>\n      <ModalBody>{\"Employee first name can not be empty.\"} </ModalBody>\n    </Modal>\n  );\n\n  var modalHtmlUN = (\n    <Modal isOpen={openModalUN} toggle={toggleModalUN}>\n      <ModalHeader toggle={toggleModalUN}>\n        Employee user name invalid\n      </ModalHeader>\n      <ModalBody>{\"Username must be greater than 4 characters.\"} </ModalBody>\n    </Modal>\n  );\n\n  var modalHtmlResponse = (\n    <Modal isOpen={openModalResponse} toggle={toggleModalResponse}>\n      <ModalHeader toggle={toggleModalResponse}>Message</ModalHeader>\n      <ModalBody>{responseText} </ModalBody>\n    </Modal>\n  );\n\n  function toggleModalFN() {\n    setOpenModalFN(!openModalFN);\n  }\n\n  function toggleModalUN() {\n    setOpenModalUN(!openModalUN);\n  }\n\n  function toggleModalResponse() {\n    setOpenModalResponse(!openModalResponse);\n  }\n\n  const toggleRoleDropDown = () => setDropDownRoleOpen(prevState => !prevState);\n\n  useEffect(() => {\n    if (confirmPassword === password && password !== \"\") {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  }, [password, confirmPassword]);\n\n  function resetForm() {\n    setUserName(\"\");\n    setFirstName(\"\");\n    setlastName(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n    setlastName(\"\");\n    setSelectedRole(\"Employee\");\n  }\n\n  function addEmployee() {\n    if (passwordValid) {\n      if (firstName === \"\") {\n        setOpenModalFN(true);\n      } else if (userName === \"\") {\n        setOpenModalUN(true);\n      } else {\n        const employeeData = {\n          username: byteCode.encode(userName.trim()),\n          password: byteCode.encode(password),\n          role: selectedRole.toLowerCase() === \"admin\" ? \"admin\" : \"user\",\n          first_name: firstName,\n          last_name: lastName\n        };\n\n        axios.defaults.withCredentials = true;\n        var user = JSON.parse(sessionStorage.getItem(\"user\"));\n        axios({\n          method: \"post\",\n          url: ADD_NEW_EMPLOYEE,\n          data: stringify(employeeData),\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Accept: \"application/json\",\n            Authorization: \"Bearer \" + user.jwt_token\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            if (res.data.success === true) {\n              resetForm();\n              setOpenModalResponse(true);\n              setResponseText(res.data.message);\n            } else {\n              setResponseText(res.data.message);\n              setOpenModalResponse(true);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  const roleList = [\n    {\n      id: 1,\n      name: \"Employee\"\n    },\n    {\n      id: 2,\n      name: \"Admin\"\n    }\n  ];\n\n  return (\n    <Container header=\"Add New Employee\">\n      {modalHtmlFN}\n      {modalHtmlUN}\n      {modalHtmlResponse}\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Employee Detail</h4>\n\n          <div className=\"row justify-content-around\">\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  First Name{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"FirstName\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter First Name\"\n                  value={firstName}\n                  onChange={event => setFirstName(event.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">Last Name</label>\n                <input\n                  name=\"LastName\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter last Name\"\n                  value={lastName}\n                  onChange={event => setlastName(event.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row justify-content-around\">\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  User Name{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"UserName\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter User Name\"\n                  id=\"username\"\n                  value={userName}\n                  onChange={event => setUserName(event.target.value)}\n                />\n                <UncontrolledTooltip placement=\"bottom\" target=\"username\">\n                  This username will be used for logging in.\n                </UncontrolledTooltip>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Role{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <Dropdown\n                  isOpen={dropDownRoleOpen}\n                  toggle={toggleRoleDropDown}\n                  id=\"userType\"\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled text-right w-100\"\n                  >\n                    {selectedRole}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    value={selectedRole}\n                    className=\"w-100\"\n                  >\n                    {roleList.map(role => (\n                      <DropdownItem\n                        key={role.id}\n                        onClick={() => setSelectedRole(role.name)}\n                      >\n                        {role.name}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n                <UncontrolledTooltip placement=\"top\" target=\"userType\">\n                  Permissions will be based on user type.\n                </UncontrolledTooltip>\n              </div>\n            </div>\n          </div>\n          <div className=\"row justify-content-around\">\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Password{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  className={\n                    passwordValid\n                      ? \"form-control input-password-valid\"\n                      : \"form-control input-password-invalid\"\n                  }\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={event => setPassword(event.target.value)}\n                />\n                <UncontrolledTooltip placement=\"bottom\" target=\"password\">\n                  Choose a password for employee.\n                </UncontrolledTooltip>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Confirm Password{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  name=\"ConfirmPassword\"\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  className={\n                    passwordValid\n                      ? \"form-control input-password-valid\"\n                      : \"form-control input-password-invalid\"\n                  }\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={event => setConfirmPassword(event.target.value)}\n                />\n                <UncontrolledTooltip\n                  placement=\"bottom\"\n                  target=\"confirmPassword\"\n                >\n                  The two passwords should match.\n                </UncontrolledTooltip>\n              </div>\n            </div>\n          </div>\n          <div className=\"row justify-content-around\">\n            <div className=\"col-md-2\">\n              <Button\n                title=\"Add Employee\"\n                className=\"btn btn-theme btn-labeled\"\n                size=\"lg\"\n                block\n                style={{ marginTop: \"50px\", marginBottom: \"40px\" }}\n                onClick={() => addEmployee()}\n                disabled={!passwordValid}\n              >\n                Add Employee\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\nexport default AddEmployee;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../common/application_container\";\nimport axios from \"axios\";\nimport { GET_ORDER_DETAIL } from \"../../config/rest_endpoints\";\nimport { withRouter } from \"react-router-dom\";\nimport { CANCEL_ORDER, GENERATE_RECEIPT } from \"../../config/rest_endpoints\";\nimport {\n  Card,\n  Table,\n  CardBody,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  UncontrolledTooltip,\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport { saveAs } from \"file-saver\";\nimport { stringify } from \"querystring\";\n\nfunction Order(props) {\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  const [orderId, setOrderId] = useState(props.location.state.orderId);\n\n  // ===========================Order Details==========================\n  const [orderDetails, setOrderDetails] = useState({\n    id: 1,\n    employee_id: 1,\n    customer_name: \"Test\",\n    customer_phone_number: \"+11 22 32323232\",\n    customer_trn: \"3333232\",\n    advance_payment: \"500\",\n    placement_date: \"2020-04-01T19:00:00.000Z\",\n    order_status: \"Incomplete\",\n    delivery_date: \"2020-04-06T19:00:00.000Z\",\n    due_amount: \"1234\",\n    remarks: \"This is a sample order.\",\n    billed_amount: \"1701\",\n    first_name: \"John\",\n    last_name: \"Legend\",\n  });\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [orderProducts, setOrderProducts] = useState([]);\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n\n  // Function\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  useEffect(() => {\n    setOrderId(props.location.state.orderId);\n    getOrderDetails();\n  }, [props.location.state.orderId]);\n\n  function toggleConfirmationModal() {\n    setConfirmModalShow(!confirmModalShow);\n  }\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  function printOrder() {\n    axios(`${GENERATE_RECEIPT}`, {\n      method: \"POST\",\n      responseType: \"blob\", //Force to receive data in a Blob Format\n      data: stringify({\n        order_id: orderId,\n      }),\n    })\n      .then((response) => {\n        const file = new Blob([response.data], { type: \"application/pdf\" });\n        saveAs(file, `Invoice for Job Order ${orderId}.pdf`);\n      })\n      .catch((error) => {\n        showResponseModal(error);\n      });\n  }\n\n  function getOrderDetails() {\n    axios({\n      method: \"get\",\n      url: `${GET_ORDER_DETAIL}/${orderId}`,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          const data = res.data;\n          setOrderDetails(data.order);\n          setPaymentDetails(data.payments);\n          setOrderProducts(data.products);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function cancelOrder() {\n    toggleConfirmationModal();\n    var user = JSON.parse(sessionStorage.getItem(\"user\"));\n    axios.defaults.withCredentials = true;\n\n    axios({\n      method: \"get\",\n      url: `${CANCEL_ORDER}/${orderId}`,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          showResponseModal(res.data.message);\n          getOrderDetails();\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  var confirmationModalHtml = (\n    <Modal isOpen={confirmModalShow} toggle={toggleConfirmationModal}>\n      <ModalHeader toggle={toggleConfirmationModal}>\n        Order Confirmation\n      </ModalHeader>\n      <ModalBody>\n        <h6>\n          Are you sure you want to cancel this order? This can not be undone.\n        </h6>\n        <div className=\"row\">\n          <Button\n            outline\n            color=\"danger\"\n            title=\"Cancel Order\"\n            size=\"lg\"\n            block\n            onClick={() => cancelOrder()}\n            disabled={orderDetails.order_status === \"Cancelled\"}\n          >\n            Yes! Cancel Order\n          </Button>\n          <Button\n            outline\n            color=\"success\"\n            title=\"No\"\n            size=\"lg\"\n            block\n            onClick={() => toggleConfirmationModal()}\n          >\n            No\n          </Button>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n\n  return (\n    <Container header=\"Order Detail\">\n      {confirmationModalHtml}\n      {responseModalHtml}\n      <Card>\n        <CardBody>\n          <div className=\"row justify-content-around pb-3\">\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Order ID: </label>\n              <input\n                name=\"OrderId\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderId}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Customer Name: </label>\n              <input\n                name=\"CustomerName\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderDetails.customer_name}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Customer Number: </label>\n              <input\n                name=\"CustomerNumber\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderDetails.customer_phone_number}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Customer TRN: </label>\n              <input\n                name=\"CustomerTRN\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderDetails.customer_trn}\n              />\n            </div>\n          </div>\n\n          <div className=\"row justify-content-around pb-3\">\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Placement Date: </label>\n              <input\n                name=\"OrderId\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={moment(orderDetails.placement_date).format(\"DD-MM-YYYY\")}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Delivery Date: </label>\n              <input\n                name=\"CustomerName\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={moment(orderDetails.delivery_date).format(\"DD-MM-YYYY\")}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Billed Amount: </label>\n              <input\n                name=\"OrderId\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderDetails.billed_amount + \" AED\"}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Remaining Amount: </label>\n              <input\n                name=\"CustomerName\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderDetails.due_amount + \" AED\"}\n              />\n            </div>\n          </div>\n\n          <div className=\"row justify-content-around\">\n            <div className=\"col-md-3\">\n              <label className=\"font-weight-semibold\">Remarks: </label>\n              <textarea\n                name=\"Remarks\"\n                type=\"text\"\n                className=\"form-control\"\n                disabled={true}\n                value={orderDetails.remarks}\n              />\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Card>\n            <CardBody>\n              <h6 className=\"font-weight-semibold\">Products: </h6>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>Name</th>\n                    <th>Quantity</th>\n                    <th>Unit Price</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {orderProducts.map((product, index) => (\n                    <tr key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{product._type}</td>\n                      <td>{product.name}</td>\n                      <td>{product.quantity}</td>\n                      <td>{product.unit_price + \" AED\"}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-md-6\">\n          <Card>\n            <CardBody>\n              <h6 className=\"font-weight-semibold\">Payments: </h6>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Date</th>\n                    <th>Amount</th>\n                    <th>Disposal</th>\n                    <th>Remaining Amount</th>\n                    <th>Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paymentDetails.map((payment, index) => (\n                    <tr key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>\n                        {moment(payment.date_of_payment).format(\"DD-MM-YYYY\")}\n                      </td>\n                      <td>{payment.paid_amount + \" AED\"}</td>\n                      <td>{payment.cash_disposal}</td>\n                      <td>{payment.due_amount + \" AED\"}</td>\n                      <td>{payment.payment_type}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-2 text-center\">\n          <Card>\n            <CardBody>\n              <Button\n                outline\n                color=\"success\"\n                size=\"lg\"\n                block\n                onClick={() => printOrder()}\n                id=\"receiptOrderBtn\"\n              >\n                Order Receipt\n              </Button>\n              <UncontrolledTooltip placement=\"bottom\" target=\"receiptOrderBtn\">\n                This will download order receipt.\n              </UncontrolledTooltip>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-md-2 text-center\">\n          <Card>\n            <CardBody>\n              <Button\n                outline\n                color=\"danger\"\n                size=\"lg\"\n                block\n                onClick={() => setConfirmModalShow(true)}\n                disabled={orderDetails.order_status === \"Cancelled\"}\n                id=\"cancelOrderBtn\"\n              >\n                Cancel Order\n              </Button>\n              <UncontrolledTooltip placement=\"bottom\" target=\"cancelOrderBtn\">\n                This will cancel order.\n              </UncontrolledTooltip>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    </Container>\n  );\n}\nexport default withRouter(Order);\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../common/application_container\";\nimport axios from \"axios\";\nimport {\n  SET_VAT,\n  GET_VAT,\n  SET_STARTING_ORDER_NUMBER,\n  GET_STARTING_ORDER_NUMBER,\n} from \"../../config/rest_endpoints\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { stringify } from \"querystring\";\n\nfunction Settings(props) {\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [vat, setVAT] = useState(\"\");\n  const [startingOrderNumber, setStartingOrderNumber] = useState(\"\");\n\n  useEffect(() => {\n    getVAT();\n    getStartingOrderNumber();\n  }, []);\n\n  function getVAT() {\n    var user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    axios({\n      method: \"get\",\n      url: GET_VAT,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setVAT(res.data.vat);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function doSetVAT() {\n    var user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    axios({\n      method: \"post\",\n      url: SET_VAT,\n      data: stringify({\n        vat: vat,\n      }),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          getVAT();\n        }\n        showResponseModal(res.data.message);\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function getStartingOrderNumber() {\n    var user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    axios({\n      method: \"get\",\n      url: GET_STARTING_ORDER_NUMBER,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setStartingOrderNumber(res.data.order_number);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function doSetStartingOrderNumber() {\n    var user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    axios({\n      method: \"post\",\n      url: SET_STARTING_ORDER_NUMBER,\n      data: stringify({\n        order_number: startingOrderNumber,\n      }),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`,\n      },\n      withCredentials: true,\n    }).then((res) => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          getStartingOrderNumber();\n        }\n        showResponseModal(res.data.message);\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  function changeOrderNumber() {}\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  return (\n    <Container header=\"Settings\">\n      {responseModalHtml}\n\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Tax</h4>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Tax %{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  placeholder=\"Tax %\"\n                  value={vat}\n                  onChange={(event) => setVAT(event.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4 align-self-end\">\n              <div className=\"form-group\">\n                <Button\n                  title=\"Set\"\n                  className=\"btn btn-theme btn-labeled\"\n                  onClick={() => doSetVAT()}\n                  disabled={vat === \"\"}\n                >\n                  Update\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Starting Order Number</h4>\n          <div className=\"row \">\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label className=\"font-weight-semibold\">\n                  Starting Order Number{\" \"}\n                  <span className=\"c-failed\" title=\"Required\">\n                    *\n                  </span>\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Starting Order Number\"\n                  value={startingOrderNumber}\n                  onChange={(event) =>\n                    setStartingOrderNumber(event.target.value)\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"col-md-4 align-self-end\">\n              <div className=\"form-group\">\n                <Button\n                  title=\"Set\"\n                  className=\"btn btn-theme btn-labeled\"\n                  onClick={() => doSetStartingOrderNumber()}\n                  disabled={startingOrderNumber === \"\"}\n                >\n                  Update\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\nexport default Settings;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../common/application_container\";\nimport {\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Table\n} from \"reactstrap\";\nimport { convertDate, getFullName } from \"../helper\";\nimport axios from \"axios\";\nimport { GET_ALL_EMPLOYEES, GET_EXPENSES } from \"../../config/rest_endpoints\";\nimport DatePicker from \"react-datepicker\";\nimport { byType, pages, colors } from \"../../config/static_lists\";\nimport { stringify } from \"querystring\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport moment from \"moment\";\n\nfunction ViewExpenses(props) {\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n  const allEmployeeObj = { id: 0, first_name: \"All\", last_name: \"Employees\" };\n\n  const [gettingData, setGettingData] = useState(false);\n  const [dropDownEmployee, setDropDownEmployee] = useState(false);\n  const [dropDownByType, setDropDownByType] = useState(false);\n\n  const [employeeList, setEmployeeList] = useState([]);\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [employeeSelected, setEmployeeSelected] = useState(allEmployeeObj);\n  const [expenseDate, setExpenseDate] = useState(new Date());\n  const [byTypeSelected, setByTypeSelected] = useState(byType[0]);\n\n  const [expensesList, setExpensesList] = useState([]);\n\n  useEffect(() => {\n    if (user.role === \"admin\") {\n      getAllEmployees();\n    }\n  }, []);\n\n  function getAllEmployees() {\n    axios({\n      method: \"get\",\n      url: GET_ALL_EMPLOYEES,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setEmployeeList([allEmployeeObj, ...res.data.rows]);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function getExpenses() {\n    setGettingData(true);\n    const data = {\n      employee_id: user.role === \"admin\" ? employeeSelected.id : user.empID,\n      date: convertDate(expenseDate),\n      sort_by: byTypeSelected\n    };\n\n    axios({\n      method: \"post\",\n      url: GET_EXPENSES,\n      data: stringify(data),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    })\n      .then(res => {\n        setGettingData(false);\n        if (res.status === 200) {\n          if (res.data.success === true) {\n            setExpensesList(res.data.rows);\n          } else {\n            showResponseModal(res.data.message);\n          }\n        } else {\n          console.log(\"Network Error\");\n        }\n      })\n      .catch(() => {\n        setGettingData(false);\n      });\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  const toggleDropDownEmployee = () =>\n    setDropDownEmployee(prevState => !prevState);\n\n  const toggleDropDownByType = () => setDropDownByType(prevState => !prevState);\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  return (\n    <div>\n      {responseModalHtml}\n      <Card>\n        <CardBody>\n          <h4 className=\"card-title\">View Expenses</h4>\n\n          <div className=\"row justify-content-center\">\n            {user.role === \"admin\" ? (\n              <div className=\"col-md-3\">\n                <Dropdown\n                  isOpen={dropDownEmployee}\n                  toggle={toggleDropDownEmployee}\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled text-right w-100\"\n                  >\n                    {getFullName(employeeSelected)}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    className=\"w-100\"\n                  >\n                    {employeeList.map((employee, index) => (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => setEmployeeSelected(employee)}\n                      >\n                        {getFullName(employee)}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"col-md-3\">\n              <DatePicker\n                className=\"form-control\"\n                dateFormat=\"MMMM d, yyyy\"\n                selected={expenseDate}\n                onChange={date => {\n                  setExpenseDate(date);\n                }}\n                todayButton=\"Today\"\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <Dropdown isOpen={dropDownByType} toggle={toggleDropDownByType}>\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled text-right w-100\"\n                >\n                  {byTypeSelected}\n                </DropdownToggle>\n                <DropdownMenu\n                  style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                  className=\"w-100\"\n                >\n                  {byType.map((bt, index) => (\n                    <DropdownItem\n                      key={index}\n                      onClick={() => setByTypeSelected(bt)}\n                    >\n                      {bt}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"col-md-3\">\n              <Button\n                title=\"Add\"\n                className=\"btn btn-theme btn-labeled w-100\"\n                onClick={() => getExpenses()}\n              >\n                Get Expenses\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            {expensesList.length > 0 ? (\n              <div className=\"card-body\">\n                <Table responsive hover bordered>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>DATE</th>\n                      <th>EXPENSE TYPE</th>\n                      <th>VEHICLE NUMBER</th>\n                      <th>CASH ON HAND</th>\n                      <th>EXPENSE AMOUNT</th>\n                      <th>EMPLOYEE NAME</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {expensesList.map((expense, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>\n                          {moment(expense.date_added).format(\"DD-MM-YYYY\")}\n                        </td>\n                        <td>{expense.expenditure_type}</td>\n                        <td>\n                          {expense.vehicle_number\n                            ? expense.vehicle_number\n                            : \"N/A\"}\n                        </td>\n                        <td>{expense.balance + \" AED\"}</td>\n                        <td>{expense.amount_spent + \" AED\"}</td>\n                        <td>{expense.employee}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            ) : (\n              <div className=\"text-center col mt-5\">\n                <BeatLoader color={\"#1861B8\"} size={20} loading={gettingData} />\n              </div>\n            )}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\nexport default ViewExpenses;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Input,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nimport { expenseTypes } from \"../../config/static_lists\";\nimport CurrencyInput from \"react-currency-input\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport {\n  ADD_EXPENSE,\n  GET_ALL_EMPLOYEES,\n  GET_ALL_VEHICLE_NUMBERS\n} from \"../../config/rest_endpoints\";\nimport { stringify } from \"querystring\";\nimport { convertDate, getFullName } from \"../helper\";\n\nfunction AddExpenses(props) {\n  const user = JSON.parse(sessionStorage.getItem(\"user\"));\n\n  const [dropDownExpenseType, setDropDownExpenseType] = useState(false);\n  const [dropDownVehicleNumber, setDropDownVehicleNumber] = useState(false);\n\n  const [dropDownEmployee, setDropDownEmployee] = useState(false);\n  const [employeeList, setEmployeeList] = useState([]);\n  const [vehicleNumberArray, setVehicleNumberArray] = useState([]);\n\n  const [expenseAmount, setExpenseAmount] = useState(0);\n  const [cashOnHand, setCashOnHand] = useState(0);\n\n  const [expenseDate, setExpenseDate] = useState(new Date());\n  const [responseModalOpen, setResponseModalOpen] = useState(false);\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [billNumber, setBillNumber] = useState(\"\");\n  const [vehicleNumberSelected, setVehicleNumberSelected] = useState(\n    \"Select Vehicle Number\"\n  );\n\n  const [expenseTypeSelected, setExpenseTypeSelected] = useState(\n    \"Select Expense Type\"\n  );\n\n  const [employeeSelected, setEmployeeSelected] = useState({\n    first_name: \"Select\",\n    last_name: \"Employee\"\n  });\n\n  useEffect(() => {\n    if (user.role === \"admin\") {\n      getAllEmployees();\n    }\n    getVehicleNumbers();\n  }, []);\n\n  function getVehicleNumbers() {\n    axios({\n      method: \"get\",\n      url: GET_ALL_VEHICLE_NUMBERS,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setVehicleNumberArray(res.data.rows);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function getAllEmployees() {\n    axios({\n      method: \"get\",\n      url: GET_ALL_EMPLOYEES,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        if (res.data.success === true) {\n          setEmployeeList(res.data.rows);\n        } else {\n          showResponseModal(res.data.message);\n        }\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  function showResponseModal(message) {\n    setResponseMessage(message);\n    setResponseModalOpen(true);\n  }\n  function toggleResponseModal() {\n    setResponseModalOpen(!responseModalOpen);\n  }\n\n  const toggleDropDownExpenseType = () =>\n    setDropDownExpenseType(prevState => !prevState);\n\n  const toggleDropDownVehicleNumber = () =>\n    setDropDownVehicleNumber(prevState => !prevState);\n\n  const toggleDropDownEmployee = () =>\n    setDropDownEmployee(prevState => !prevState);\n\n  function reset() {}\n\n  function addExpense() {\n    const data = {\n      employee_id: user.role === \"admin\" ? employeeSelected.id : user.empID,\n      date_added: convertDate(expenseDate),\n      amount_spent: expenseAmount,\n      cash_on_hand: cashOnHand,\n      expense_type: expenseTypeSelected,\n      bill_number: billNumber\n    };\n    if (expenseTypeSelected === \"Vehicle\" || expenseTypeSelected === \"Petrol\") {\n      data[\"vehicle_id\"] = vehicleNumberSelected;\n    }\n    if (expenseTypeSelected === \"Other\") {\n      data[\"description\"] = description;\n    }\n\n    axios({\n      method: \"post\",\n      url: ADD_EXPENSE,\n      data: stringify(data),\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${user.jwt_token}`\n      },\n      withCredentials: true\n    }).then(res => {\n      if (res.status === 200) {\n        showResponseModal(res.data.message);\n        reset();\n      } else {\n        console.log(\"Network Error\");\n      }\n    });\n  }\n\n  var responseModalHtml = (\n    <Modal isOpen={responseModalOpen} toggle={toggleResponseModal}>\n      <ModalHeader toggle={toggleResponseModal}>Response</ModalHeader>\n      <ModalBody>{responseMessage}</ModalBody>\n    </Modal>\n  );\n\n  return (\n    <div>\n      {responseModalHtml}\n      <Card>\n        <CardBody>\n          <h4 className=\"card-title\">Add Expense</h4>\n          <div className=\"row justify-content-around\">\n            {user.role === \"admin\" ? (\n              <div className=\"col-md-2\">\n                <Dropdown\n                  isOpen={dropDownEmployee}\n                  toggle={toggleDropDownEmployee}\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled text-right w-100\"\n                  >\n                    {getFullName(employeeSelected)}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    className=\"w-100\"\n                  >\n                    {employeeList.map((employee, index) => (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => setEmployeeSelected(employee)}\n                      >\n                        {getFullName(employee)}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"col-md-2\">\n              <Dropdown\n                isOpen={dropDownExpenseType}\n                toggle={toggleDropDownExpenseType}\n              >\n                <DropdownToggle\n                  caret\n                  className=\"btn btn-theme btn-labeled text-right w-100\"\n                >\n                  {expenseTypeSelected}\n                </DropdownToggle>\n                <DropdownMenu\n                  style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                  className=\"w-100\"\n                >\n                  {expenseTypes.map((type, index) => (\n                    <DropdownItem\n                      key={index}\n                      onClick={() => setExpenseTypeSelected(type)}\n                    >\n                      {type}\n                    </DropdownItem>\n                  ))}\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n\n            {expenseTypeSelected === \"Vehicle\" ||\n            expenseTypeSelected === \"Petrol\" ? (\n              <div className=\"col-md-2\">\n                <Dropdown\n                  isOpen={dropDownVehicleNumber}\n                  toggle={toggleDropDownVehicleNumber}\n                >\n                  <DropdownToggle\n                    caret\n                    className=\"btn btn-theme btn-labeled text-right w-100\"\n                  >\n                    {vehicleNumberSelected}\n                  </DropdownToggle>\n                  <DropdownMenu\n                    style={{ overflow: \"auto\", maxHeight: \"20vh\" }}\n                    className=\"w-100\"\n                  >\n                    {vehicleNumberArray.map((vehicle, index) => (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => setVehicleNumberSelected(vehicle.id)}\n                      >\n                        {vehicle.vehicle_number}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </Dropdown>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {expenseTypeSelected === \"Other\" ? (\n              <div className=\"col-md-2\">\n                <input\n                  disabled={expenseTypeSelected !== \"Other\"}\n                  name=\"Description\"\n                  id=\"Description\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Description\"\n                  value={description}\n                  onChange={event => setDescription(event.target.value)}\n                />\n                <UncontrolledTooltip placement=\"bottom\" target=\"Description\">\n                  Description\n                </UncontrolledTooltip>\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"col-md-2\">\n              <CurrencyInput\n                className=\"form-control\"\n                id=\"cashOnHand\"\n                suffix=\" AED\"\n                precision=\"0\"\n                value={cashOnHand}\n                onChangeEvent={(event, value, maskedValue) =>\n                  setCashOnHand(maskedValue)\n                }\n              />\n              <UncontrolledTooltip placement=\"bottom\" target=\"cashOnHand\">\n                Cash On Hand\n              </UncontrolledTooltip>\n            </div>\n            <div className=\"col-md-2\">\n              <CurrencyInput\n                className=\"form-control\"\n                id=\"expenseAmount\"\n                suffix=\" AED\"\n                precision=\"0\"\n                value={expenseAmount}\n                onChangeEvent={(event, value, maskedValue) =>\n                  setExpenseAmount(maskedValue)\n                }\n              />\n              <UncontrolledTooltip placement=\"bottom\" target=\"expenseAmount\">\n                Expense Amount\n              </UncontrolledTooltip>\n            </div>\n            <div className=\"col-md-2\">\n              <DatePicker\n                className=\"form-control\"\n                id=\"expenseDate\"\n                dateFormat=\"MMMM d, yyyy\"\n                selected={expenseDate}\n                onChange={date => {\n                  setExpenseDate(date);\n                }}\n                todayButton=\"Today\"\n              />\n              <UncontrolledTooltip placement=\"bottom\" target=\"expenseDate\">\n                Expense Date\n              </UncontrolledTooltip>\n            </div>\n          </div>\n          <div className=\"row pt-4 justify-content-end\">\n            <div className=\"col-md-2\">\n              <input\n                name=\"Bill number\"\n                id=\"Bill\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Bill number\"\n                value={billNumber}\n                onChange={event => setBillNumber(event.target.value)}\n              />\n              <UncontrolledTooltip placement=\"bottom\" target=\"Bill\">\n                Bill number\n              </UncontrolledTooltip>\n            </div>\n            <div className=\"col-md-3\">\n              <Button\n                title=\"Add\"\n                className=\"btn btn-theme btn-labeled w-100\"\n                onClick={() => addExpense()}\n                disabled={\n                  expenseAmount === 0 ||\n                  expenseTypeSelected === \"Select Expense Type\" ||\n                  (user.role === \"admin\" &&\n                    employeeSelected.first_name === \"Select\") ||\n                  ((expenseTypeSelected === \"Vehicle\" ||\n                    expenseTypeSelected === \"Petrol\") &&\n                    vehicleNumberSelected === \"Select Vehicle Number\")\n                }\n              >\n                Add Expense\n              </Button>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\nexport default AddExpenses;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"../common/application_container\";\n\nimport ViewExpenses from \"./viewExpenses\";\nimport AddExpenses from \"./addExpenses\";\n\nfunction Expenses(props) {\n  return (\n    <Container header=\"Expenses\">\n      <AddExpenses />\n      <ViewExpenses />\n    </Container>\n  );\n}\nexport default Expenses;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport ProtectedRoute from \"./protectedRoute\";\n\nimport {\n  LOAD_LOGIN,\n  LOAD_LOGOUT,\n  CHANGE_PASSWORD,\n  LOAD_APP,\n  NEW_ORDER,\n  ALL_ORDERS,\n  ADD_EMPLOYEE,\n  ORDER,\n  SETTINGS,\n  EXPENSES,\n} from \"./routeConstants\";\n\nimport Login from \"../authentication/login\";\nimport Logout from \"../authentication/logout\";\nimport ChangePassword from \"../settings/change_password\";\nimport App from \"../../App\";\nimport NewOrder from \"../order/newOrder\";\nimport AllOrders from \"../order/allOrder\";\nimport AddEmployee from \"../employees/add_employee\";\nimport Order from \"../order/order\";\nimport Settings from \"../settings/settings\";\nimport Expenses from \"../expense/expenses\";\n\nclass AllRoutes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <ProtectedRoute path={LOAD_LOGIN} component={Login} />\n          <ProtectedRoute exact path={LOAD_LOGOUT} component={Logout} />\n          <ProtectedRoute\n            exact\n            path={CHANGE_PASSWORD}\n            component={ChangePassword}\n          />\n          <ProtectedRoute exact path={LOAD_APP} component={App} />\n          <ProtectedRoute exact path={SETTINGS} component={Settings} />\n          <ProtectedRoute exact path={EXPENSES} component={Expenses} />\n          <ProtectedRoute exact path={NEW_ORDER} component={NewOrder} />\n          <ProtectedRoute exact path={ALL_ORDERS} component={AllOrders} />\n          <ProtectedRoute exact path={ORDER} component={Order} />\n          <ProtectedRoute exact path={ADD_EMPLOYEE} component={AddEmployee} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default AllRoutes;\n","import { combineReducers } from 'redux';\nimport ActiveUserReducer from './reducer_active_user';\n\nconst rootReducer = combineReducers({\n    activeUser: ActiveUserReducer,\n});\n\nexport default rootReducer;\n","import { ACTIVE_USER } from '../actions'\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ACTIVE_USER:\n            var tempState = action.payload.data;\n            if (Array.isArray(tempState)) {\n                tempState = { \"message\": \"Something Went Wrong\" }\n            }\n            return tempState;\n        default:\n            return state;\n    }\n}","// import the library\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nimport {\n  faHome,\n  faCartPlus,\n  faSearch,\n  faHandHoldingUsd,\n  faInfoCircle,\n  faCogs,\n  faUserPlus,\n  faMoneyBillWave,\n  faFilter,\n  faUnlock,\n  faPrint,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  faEdit,\n  faWindowClose,\n  faCheckCircle,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nlibrary.add(\n  faHome,\n  faCartPlus,\n  faSearch,\n  faEdit,\n  faHandHoldingUsd,\n  faInfoCircle,\n  faWindowClose,\n  faCogs,\n  faUserPlus,\n  faMoneyBillWave,\n  faFilter,\n  faCheckCircle,\n  faUnlock,\n  faPrint\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport AllRoutes from './components/router/AllRoutes';\nimport reducers from './reducers';\nimport './fontawesome';\n\nexport const store = createStore(\n    (reducers),\n    composeWithDevTools(\n        applyMiddleware(promise, thunk)\n    )\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <AllRoutes />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}